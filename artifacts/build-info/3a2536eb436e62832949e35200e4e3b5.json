{
	"id": "3a2536eb436e62832949e35200e4e3b5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"SimpleStaking.sol": {
				"content": "import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n/**\r\n * @title SimpleStaking\r\n * @dev Contract that allows users to stake ERC20 tokens and earn block-based rewards.\r\n */\r\ncontract SimpleStaking is Ownable {\r\n    IERC20 public stakingToken;\r\n    uint256 public rewardRatePerBlock; // Reward given per block, scaled to 1e18\r\n\r\n    struct StakeInfo {\r\n        uint256 amount;           // Amount of tokens staked\r\n        uint256 rewardDebt;        // Accumulated but unpaid rewards\r\n        uint256 lastStakedBlock;   // Block number when last staked or claimed\r\n    }\r\n\r\n    mapping(address => StakeInfo) public stakes;\r\n\r\n    event Staked(address indexed user, uint256 amount);\r\n    event Unstaked(address indexed user, uint256 amount, uint256 reward);\r\n\r\n    /**\r\n     * @param _stakingToken Address of the ERC20 staking token\r\n     * @param _rewardRatePerBlock Rewards distributed per block per token staked\r\n     * @param initialOwner Owner of the staking contract\r\n     */\r\n    constructor(address _stakingToken, uint256 _rewardRatePerBlock, address initialOwner) Ownable(initialOwner) {\r\n        require(_stakingToken != address(0), \"Invalid token address\");\r\n        require(_rewardRatePerBlock > 0, \"Invalid reward rate\");\r\n\r\n        stakingToken = IERC20(_stakingToken);\r\n        rewardRatePerBlock = _rewardRatePerBlock;\r\n    }\r\n    /**\r\n     * @dev Stake specified amount of tokens\r\n     */\r\n    function stake(uint256 _amount) external {\r\n        require(_amount > 0, \"Cannot stake 0 tokens\");\r\n\r\n        StakeInfo storage user = stakes[msg.sender];\r\n\r\n        if (user.amount > 0) {\r\n            uint256 pendingReward = calculateReward(msg.sender);\r\n            user.rewardDebt += pendingReward;\r\n        }\r\n\r\n        stakingToken.transferFrom(msg.sender, address(this), _amount);\r\n\r\n        user.amount += _amount;\r\n        user.lastStakedBlock = block.number;\r\n\r\n        emit Staked(msg.sender, _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Unstake specified amount and claim rewards\r\n     */\r\n    function unstake(uint256 _amount) external {\r\n        StakeInfo storage user = stakes[msg.sender];\r\n        require(user.amount >= _amount, \"Not enough staked\");\r\n\r\n        uint256 pendingReward = calculateReward(msg.sender);\r\n        uint256 totalReward = pendingReward + user.rewardDebt;\r\n\r\n        user.amount -= _amount;\r\n        user.rewardDebt = 0;\r\n        user.lastStakedBlock = block.number;\r\n\r\n        stakingToken.transfer(msg.sender, _amount);\r\n\r\n        if (totalReward > 0) {\r\n            stakingToken.transfer(msg.sender, totalReward);\r\n        }\r\n\r\n        emit Unstaked(msg.sender, _amount, totalReward);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculate pending rewards for a user (internal helper)\r\n     */\r\n    function calculateReward(address _user) public view returns (uint256) {\r\n        StakeInfo storage user = stakes[_user];\r\n        uint256 blocksPassed = block.number - user.lastStakedBlock;\r\n        return (user.amount * rewardRatePerBlock * blocksPassed) / 1e18;\r\n    }\r\n\r\n    /**\r\n     * @dev View function to check total pending rewards for a user\r\n     */\r\n    function pendingRewards(address _user) external view returns (uint256) {\r\n        StakeInfo storage user = stakes[_user];\r\n        uint256 pendingReward = calculateReward(_user);\r\n        return pendingReward + user.rewardDebt;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SimpleStaking.sol": {
				"SimpleStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardRatePerBlock",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRatePerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastStakedBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract that allows users to stake ERC20 tokens and earn block-based rewards.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"calculateReward(address)": {
								"details": "Calculate pending rewards for a user (internal helper)"
							},
							"constructor": {
								"params": {
									"_rewardRatePerBlock": "Rewards distributed per block per token staked",
									"_stakingToken": "Address of the ERC20 staking token",
									"initialOwner": "Owner of the staking contract"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingRewards(address)": {
								"details": "View function to check total pending rewards for a user"
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"stake(uint256)": {
								"details": "Stake specified amount of tokens"
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unstake(uint256)": {
								"details": "Unstake specified amount and claim rewards"
							}
						},
						"title": "SimpleStaking",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SimpleStaking.sol\":236:3396  contract SimpleStaking is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"SimpleStaking.sol\":1047:1401  constructor(address _stakingToken, uint256 _rewardRatePerBlock, address initialOwner) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"SimpleStaking.sol\":1141:1153  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"SimpleStaking.sol\":1199:1200  0 */\n  0x00\n    /* \"SimpleStaking.sol\":1174:1201  _stakingToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"SimpleStaking.sol\":1174:1187  _stakingToken */\n  dup4\n    /* \"SimpleStaking.sol\":1174:1201  _stakingToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"SimpleStaking.sol\":1166:1227  require(_stakingToken != address(0), \"Invalid token address\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n    /* \"SimpleStaking.sol\":1268:1269  0 */\n  0x00\n    /* \"SimpleStaking.sol\":1246:1265  _rewardRatePerBlock */\n  dup3\n    /* \"SimpleStaking.sol\":1246:1269  _rewardRatePerBlock > 0 */\n  gt\n    /* \"SimpleStaking.sol\":1238:1293  require(_rewardRatePerBlock > 0, \"Invalid reward rate\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n    /* \"SimpleStaking.sol\":1328:1341  _stakingToken */\n  dup3\n    /* \"SimpleStaking.sol\":1306:1318  stakingToken */\n  0x01\n  0x00\n    /* \"SimpleStaking.sol\":1306:1342  stakingToken = IERC20(_stakingToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SimpleStaking.sol\":1374:1393  _rewardRatePerBlock */\n  dup2\n    /* \"SimpleStaking.sol\":1353:1371  rewardRatePerBlock */\n  0x02\n    /* \"SimpleStaking.sol\":1353:1393  rewardRatePerBlock = _rewardRatePerBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"SimpleStaking.sol\":1047:1401  constructor(address _stakingToken, uint256 _rewardRatePerBlock, address initialOwner) Ownable(initialOwner) {... */\n  pop\n  pop\n  pop\n    /* \"SimpleStaking.sol\":236:3396  contract SimpleStaking is Ownable {... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_22:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_24:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_25:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_43\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_24\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_26:\n    /* \"#utility.yul\":641:665   */\n  tag_45\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_25\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_46:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_27:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_48\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_26\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_28:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_29:\n    /* \"#utility.yul\":1001:1025   */\n  tag_51\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_28\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_52:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_30:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_54\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_29\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  dup1\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_57\n  tag_22\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1326:1445   */\ntag_56:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_58\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_27\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_59\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_30\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_60\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_27\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1874:1992   */\ntag_31:\n    /* \"#utility.yul\":1961:1985   */\n  tag_62\n    /* \"#utility.yul\":1979:1984   */\n  dup2\n    /* \"#utility.yul\":1961:1985   */\n  tag_25\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1956:1959   */\n  dup3\n    /* \"#utility.yul\":1949:1986   */\n  mstore\n    /* \"#utility.yul\":1874:1992   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1998:2220   */\ntag_9:\n    /* \"#utility.yul\":2091:2095   */\n  0x00\n    /* \"#utility.yul\":2129:2131   */\n  0x20\n    /* \"#utility.yul\":2118:2127   */\n  dup3\n    /* \"#utility.yul\":2114:2132   */\n  add\n    /* \"#utility.yul\":2106:2132   */\n  swap1\n  pop\n    /* \"#utility.yul\":2142:2213   */\n  tag_64\n    /* \"#utility.yul\":2210:2211   */\n  0x00\n    /* \"#utility.yul\":2199:2208   */\n  dup4\n    /* \"#utility.yul\":2195:2212   */\n  add\n    /* \"#utility.yul\":2186:2192   */\n  dup5\n    /* \"#utility.yul\":2142:2213   */\n  tag_31\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1998:2220   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2226:2395   */\ntag_32:\n    /* \"#utility.yul\":2310:2321   */\n  0x00\n    /* \"#utility.yul\":2344:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2342   */\n  dup3\n    /* \"#utility.yul\":2332:2351   */\n  mstore\n    /* \"#utility.yul\":2384:2388   */\n  0x20\n    /* \"#utility.yul\":2379:2382   */\n  dup3\n    /* \"#utility.yul\":2375:2389   */\n  add\n    /* \"#utility.yul\":2360:2389   */\n  swap1\n  pop\n    /* \"#utility.yul\":2226:2395   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2401:2572   */\ntag_33:\n    /* \"#utility.yul\":2541:2564   */\n  0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n    /* \"#utility.yul\":2537:2538   */\n  0x00\n    /* \"#utility.yul\":2529:2535   */\n  dup3\n    /* \"#utility.yul\":2525:2539   */\n  add\n    /* \"#utility.yul\":2518:2565   */\n  mstore\n    /* \"#utility.yul\":2401:2572   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2578:2944   */\ntag_34:\n    /* \"#utility.yul\":2720:2723   */\n  0x00\n    /* \"#utility.yul\":2741:2808   */\n  tag_68\n    /* \"#utility.yul\":2805:2807   */\n  0x15\n    /* \"#utility.yul\":2800:2803   */\n  dup4\n    /* \"#utility.yul\":2741:2808   */\n  tag_32\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2734:2808   */\n  swap2\n  pop\n    /* \"#utility.yul\":2817:2910   */\n  tag_69\n    /* \"#utility.yul\":2906:2909   */\n  dup3\n    /* \"#utility.yul\":2817:2910   */\n  tag_33\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2935:2937   */\n  0x20\n    /* \"#utility.yul\":2930:2933   */\n  dup3\n    /* \"#utility.yul\":2926:2938   */\n  add\n    /* \"#utility.yul\":2919:2938   */\n  swap1\n  pop\n    /* \"#utility.yul\":2578:2944   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2950:3369   */\ntag_15:\n    /* \"#utility.yul\":3116:3120   */\n  0x00\n    /* \"#utility.yul\":3154:3156   */\n  0x20\n    /* \"#utility.yul\":3143:3152   */\n  dup3\n    /* \"#utility.yul\":3139:3157   */\n  add\n    /* \"#utility.yul\":3131:3157   */\n  swap1\n  pop\n    /* \"#utility.yul\":3203:3212   */\n  dup2\n    /* \"#utility.yul\":3197:3201   */\n  dup2\n    /* \"#utility.yul\":3193:3213   */\n  sub\n    /* \"#utility.yul\":3189:3190   */\n  0x00\n    /* \"#utility.yul\":3178:3187   */\n  dup4\n    /* \"#utility.yul\":3174:3191   */\n  add\n    /* \"#utility.yul\":3167:3214   */\n  mstore\n    /* \"#utility.yul\":3231:3362   */\n  tag_71\n    /* \"#utility.yul\":3357:3361   */\n  dup2\n    /* \"#utility.yul\":3231:3362   */\n  tag_34\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3223:3362   */\n  swap1\n  pop\n    /* \"#utility.yul\":2950:3369   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3375:3544   */\ntag_35:\n    /* \"#utility.yul\":3515:3536   */\n  0x496e76616c696420726577617264207261746500000000000000000000000000\n    /* \"#utility.yul\":3511:3512   */\n  0x00\n    /* \"#utility.yul\":3503:3509   */\n  dup3\n    /* \"#utility.yul\":3499:3513   */\n  add\n    /* \"#utility.yul\":3492:3537   */\n  mstore\n    /* \"#utility.yul\":3375:3544   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3550:3916   */\ntag_36:\n    /* \"#utility.yul\":3692:3695   */\n  0x00\n    /* \"#utility.yul\":3713:3780   */\n  tag_74\n    /* \"#utility.yul\":3777:3779   */\n  0x13\n    /* \"#utility.yul\":3772:3775   */\n  dup4\n    /* \"#utility.yul\":3713:3780   */\n  tag_32\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3706:3780   */\n  swap2\n  pop\n    /* \"#utility.yul\":3789:3882   */\n  tag_75\n    /* \"#utility.yul\":3878:3881   */\n  dup3\n    /* \"#utility.yul\":3789:3882   */\n  tag_35\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3907:3909   */\n  0x20\n    /* \"#utility.yul\":3902:3905   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  add\n    /* \"#utility.yul\":3891:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3550:3916   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3922:4341   */\ntag_18:\n    /* \"#utility.yul\":4088:4092   */\n  0x00\n    /* \"#utility.yul\":4126:4128   */\n  0x20\n    /* \"#utility.yul\":4115:4124   */\n  dup3\n    /* \"#utility.yul\":4111:4129   */\n  add\n    /* \"#utility.yul\":4103:4129   */\n  swap1\n  pop\n    /* \"#utility.yul\":4175:4184   */\n  dup2\n    /* \"#utility.yul\":4169:4173   */\n  dup2\n    /* \"#utility.yul\":4165:4185   */\n  sub\n    /* \"#utility.yul\":4161:4162   */\n  0x00\n    /* \"#utility.yul\":4150:4159   */\n  dup4\n    /* \"#utility.yul\":4146:4163   */\n  add\n    /* \"#utility.yul\":4139:4186   */\n  mstore\n    /* \"#utility.yul\":4203:4334   */\n  tag_77\n    /* \"#utility.yul\":4329:4333   */\n  dup2\n    /* \"#utility.yul\":4203:4334   */\n  tag_36\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4195:4334   */\n  swap1\n  pop\n    /* \"#utility.yul\":3922:4341   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"SimpleStaking.sol\":236:3396  contract SimpleStaking is Ownable {... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SimpleStaking.sol\":236:3396  contract SimpleStaking is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x90870492\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd82e3962\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x16934fc4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x31d7a262\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"SimpleStaking.sol\":639:682  mapping(address => StakeInfo) public stakes */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SimpleStaking.sol\":2072:2700  function unstake(uint256 _amount) external {... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"SimpleStaking.sol\":3159:3393  function pendingRewards(address _user) external view returns (uint256) {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"SimpleStaking.sol\":277:303  IERC20 public stakingToken */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SimpleStaking.sol\":310:343  uint256 public rewardRatePerBlock */\n    tag_9:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SimpleStaking.sol\":1471:1990  function stake(uint256 _amount) external {... */\n    tag_10:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"SimpleStaking.sol\":2794:3064  function calculateReward(address _user) public view returns (uint256) {... */\n    tag_11:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"SimpleStaking.sol\":639:682  mapping(address => StakeInfo) public stakes */\n    tag_17:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"SimpleStaking.sol\":2072:2700  function unstake(uint256 _amount) external {... */\n    tag_23:\n        /* \"SimpleStaking.sol\":2126:2148  StakeInfo storage user */\n      0x00\n        /* \"SimpleStaking.sol\":2151:2157  stakes */\n      0x03\n        /* \"SimpleStaking.sol\":2151:2169  stakes[msg.sender] */\n      0x00\n        /* \"SimpleStaking.sol\":2158:2168  msg.sender */\n      caller\n        /* \"SimpleStaking.sol\":2151:2169  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SimpleStaking.sol\":2126:2169  StakeInfo storage user = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"SimpleStaking.sol\":2203:2210  _amount */\n      dup2\n        /* \"SimpleStaking.sol\":2188:2192  user */\n      dup2\n        /* \"SimpleStaking.sol\":2188:2199  user.amount */\n      0x00\n      add\n      sload\n        /* \"SimpleStaking.sol\":2188:2210  user.amount >= _amount */\n      lt\n      iszero\n        /* \"SimpleStaking.sol\":2180:2232  require(user.amount >= _amount, \"Not enough staked\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"SimpleStaking.sol\":2245:2266  uint256 pendingReward */\n      0x00\n        /* \"SimpleStaking.sol\":2269:2296  calculateReward(msg.sender) */\n      tag_56\n        /* \"SimpleStaking.sol\":2285:2295  msg.sender */\n      caller\n        /* \"SimpleStaking.sol\":2269:2284  calculateReward */\n      tag_47\n        /* \"SimpleStaking.sol\":2269:2296  calculateReward(msg.sender) */\n      jump\t// in\n    tag_56:\n        /* \"SimpleStaking.sol\":2245:2296  uint256 pendingReward = calculateReward(msg.sender) */\n      swap1\n      pop\n        /* \"SimpleStaking.sol\":2307:2326  uint256 totalReward */\n      0x00\n        /* \"SimpleStaking.sol\":2345:2349  user */\n      dup3\n        /* \"SimpleStaking.sol\":2345:2360  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"SimpleStaking.sol\":2329:2342  pendingReward */\n      dup3\n        /* \"SimpleStaking.sol\":2329:2360  pendingReward + user.rewardDebt */\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"SimpleStaking.sol\":2307:2360  uint256 totalReward = pendingReward + user.rewardDebt */\n      swap1\n      pop\n        /* \"SimpleStaking.sol\":2388:2395  _amount */\n      dup4\n        /* \"SimpleStaking.sol\":2373:2377  user */\n      dup4\n        /* \"SimpleStaking.sol\":2373:2384  user.amount */\n      0x00\n      add\n      0x00\n        /* \"SimpleStaking.sol\":2373:2395  user.amount -= _amount */\n      dup3\n      dup3\n      sload\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SimpleStaking.sol\":2424:2425  0 */\n      0x00\n        /* \"SimpleStaking.sol\":2406:2410  user */\n      dup4\n        /* \"SimpleStaking.sol\":2406:2421  user.rewardDebt */\n      0x01\n      add\n        /* \"SimpleStaking.sol\":2406:2425  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SimpleStaking.sol\":2459:2471  block.number */\n      number\n        /* \"SimpleStaking.sol\":2436:2440  user */\n      dup4\n        /* \"SimpleStaking.sol\":2436:2456  user.lastStakedBlock */\n      0x02\n      add\n        /* \"SimpleStaking.sol\":2436:2471  user.lastStakedBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SimpleStaking.sol\":2484:2496  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SimpleStaking.sol\":2484:2505  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"SimpleStaking.sol\":2506:2516  msg.sender */\n      caller\n        /* \"SimpleStaking.sol\":2518:2525  _amount */\n      dup7\n        /* \"SimpleStaking.sol\":2484:2526  stakingToken.transfer(msg.sender, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      pop\n        /* \"SimpleStaking.sol\":2557:2558  0 */\n      0x00\n        /* \"SimpleStaking.sol\":2543:2554  totalReward */\n      dup2\n        /* \"SimpleStaking.sol\":2543:2558  totalReward > 0 */\n      gt\n        /* \"SimpleStaking.sol\":2539:2633  if (totalReward > 0) {... */\n      iszero\n      tag_67\n      jumpi\n        /* \"SimpleStaking.sol\":2575:2587  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SimpleStaking.sol\":2575:2596  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"SimpleStaking.sol\":2597:2607  msg.sender */\n      caller\n        /* \"SimpleStaking.sol\":2609:2620  totalReward */\n      dup4\n        /* \"SimpleStaking.sol\":2575:2621  stakingToken.transfer(msg.sender, totalReward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_68:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_71:\n      pop\n        /* \"SimpleStaking.sol\":2539:2633  if (totalReward > 0) {... */\n    tag_67:\n        /* \"SimpleStaking.sol\":2659:2669  msg.sender */\n      caller\n        /* \"SimpleStaking.sol\":2650:2692  Unstaked(msg.sender, _amount, totalReward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e\n        /* \"SimpleStaking.sol\":2671:2678  _amount */\n      dup6\n        /* \"SimpleStaking.sol\":2680:2691  totalReward */\n      dup4\n        /* \"SimpleStaking.sol\":2650:2692  Unstaked(msg.sender, _amount, totalReward) */\n      mload(0x40)\n      tag_72\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SimpleStaking.sol\":2115:2700  {... */\n      pop\n      pop\n      pop\n        /* \"SimpleStaking.sol\":2072:2700  function unstake(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"SimpleStaking.sol\":3159:3393  function pendingRewards(address _user) external view returns (uint256) {... */\n    tag_26:\n        /* \"SimpleStaking.sol\":3221:3228  uint256 */\n      0x00\n        /* \"SimpleStaking.sol\":3241:3263  StakeInfo storage user */\n      dup1\n        /* \"SimpleStaking.sol\":3266:3272  stakes */\n      0x03\n        /* \"SimpleStaking.sol\":3266:3279  stakes[_user] */\n      0x00\n        /* \"SimpleStaking.sol\":3273:3278  _user */\n      dup5\n        /* \"SimpleStaking.sol\":3266:3279  stakes[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SimpleStaking.sol\":3241:3279  StakeInfo storage user = stakes[_user] */\n      swap1\n      pop\n        /* \"SimpleStaking.sol\":3290:3311  uint256 pendingReward */\n      0x00\n        /* \"SimpleStaking.sol\":3314:3336  calculateReward(_user) */\n      tag_75\n        /* \"SimpleStaking.sol\":3330:3335  _user */\n      dup5\n        /* \"SimpleStaking.sol\":3314:3329  calculateReward */\n      tag_47\n        /* \"SimpleStaking.sol\":3314:3336  calculateReward(_user) */\n      jump\t// in\n    tag_75:\n        /* \"SimpleStaking.sol\":3290:3336  uint256 pendingReward = calculateReward(_user) */\n      swap1\n      pop\n        /* \"SimpleStaking.sol\":3370:3374  user */\n      dup2\n        /* \"SimpleStaking.sol\":3370:3385  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"SimpleStaking.sol\":3354:3367  pendingReward */\n      dup2\n        /* \"SimpleStaking.sol\":3354:3385  pendingReward + user.rewardDebt */\n      tag_76\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_76:\n        /* \"SimpleStaking.sol\":3347:3385  return pendingReward + user.rewardDebt */\n      swap3\n      pop\n      pop\n      pop\n        /* \"SimpleStaking.sol\":3159:3393  function pendingRewards(address _user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"SimpleStaking.sol\":277:303  IERC20 public stakingToken */\n    tag_32:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"SimpleStaking.sol\":310:343  uint256 public rewardRatePerBlock */\n    tag_40:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"SimpleStaking.sol\":1471:1990  function stake(uint256 _amount) external {... */\n    tag_44:\n        /* \"SimpleStaking.sol\":1541:1542  0 */\n      0x00\n        /* \"SimpleStaking.sol\":1531:1538  _amount */\n      dup2\n        /* \"SimpleStaking.sol\":1531:1542  _amount > 0 */\n      gt\n        /* \"SimpleStaking.sol\":1523:1568  require(_amount > 0, \"Cannot stake 0 tokens\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"SimpleStaking.sol\":1581:1603  StakeInfo storage user */\n      0x00\n        /* \"SimpleStaking.sol\":1606:1612  stakes */\n      0x03\n        /* \"SimpleStaking.sol\":1606:1624  stakes[msg.sender] */\n      0x00\n        /* \"SimpleStaking.sol\":1613:1623  msg.sender */\n      caller\n        /* \"SimpleStaking.sol\":1606:1624  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SimpleStaking.sol\":1581:1624  StakeInfo storage user = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"SimpleStaking.sol\":1655:1656  0 */\n      0x00\n        /* \"SimpleStaking.sol\":1641:1645  user */\n      dup2\n        /* \"SimpleStaking.sol\":1641:1652  user.amount */\n      0x00\n      add\n      sload\n        /* \"SimpleStaking.sol\":1641:1656  user.amount > 0 */\n      gt\n        /* \"SimpleStaking.sol\":1637:1783  if (user.amount > 0) {... */\n      iszero\n      tag_88\n      jumpi\n        /* \"SimpleStaking.sol\":1673:1694  uint256 pendingReward */\n      0x00\n        /* \"SimpleStaking.sol\":1697:1724  calculateReward(msg.sender) */\n      tag_89\n        /* \"SimpleStaking.sol\":1713:1723  msg.sender */\n      caller\n        /* \"SimpleStaking.sol\":1697:1712  calculateReward */\n      tag_47\n        /* \"SimpleStaking.sol\":1697:1724  calculateReward(msg.sender) */\n      jump\t// in\n    tag_89:\n        /* \"SimpleStaking.sol\":1673:1724  uint256 pendingReward = calculateReward(msg.sender) */\n      swap1\n      pop\n        /* \"SimpleStaking.sol\":1758:1771  pendingReward */\n      dup1\n        /* \"SimpleStaking.sol\":1739:1743  user */\n      dup3\n        /* \"SimpleStaking.sol\":1739:1754  user.rewardDebt */\n      0x01\n      add\n      0x00\n        /* \"SimpleStaking.sol\":1739:1771  user.rewardDebt += pendingReward */\n      dup3\n      dup3\n      sload\n      tag_90\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_90:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SimpleStaking.sol\":1658:1783  {... */\n      pop\n        /* \"SimpleStaking.sol\":1637:1783  if (user.amount > 0) {... */\n    tag_88:\n        /* \"SimpleStaking.sol\":1795:1807  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SimpleStaking.sol\":1795:1820  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"SimpleStaking.sol\":1821:1831  msg.sender */\n      caller\n        /* \"SimpleStaking.sol\":1841:1845  this */\n      address\n        /* \"SimpleStaking.sol\":1848:1855  _amount */\n      dup6\n        /* \"SimpleStaking.sol\":1795:1856  stakingToken.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_95:\n      pop\n        /* \"SimpleStaking.sol\":1884:1891  _amount */\n      dup2\n        /* \"SimpleStaking.sol\":1869:1873  user */\n      dup2\n        /* \"SimpleStaking.sol\":1869:1880  user.amount */\n      0x00\n      add\n      0x00\n        /* \"SimpleStaking.sol\":1869:1891  user.amount += _amount */\n      dup3\n      dup3\n      sload\n      tag_96\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_96:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SimpleStaking.sol\":1925:1937  block.number */\n      number\n        /* \"SimpleStaking.sol\":1902:1906  user */\n      dup2\n        /* \"SimpleStaking.sol\":1902:1922  user.lastStakedBlock */\n      0x02\n      add\n        /* \"SimpleStaking.sol\":1902:1937  user.lastStakedBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SimpleStaking.sol\":1962:1972  msg.sender */\n      caller\n        /* \"SimpleStaking.sol\":1955:1982  Staked(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"SimpleStaking.sol\":1974:1981  _amount */\n      dup4\n        /* \"SimpleStaking.sol\":1955:1982  Staked(msg.sender, _amount) */\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SimpleStaking.sol\":1512:1990  {... */\n      pop\n        /* \"SimpleStaking.sol\":1471:1990  function stake(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"SimpleStaking.sol\":2794:3064  function calculateReward(address _user) public view returns (uint256) {... */\n    tag_47:\n        /* \"SimpleStaking.sol\":2855:2862  uint256 */\n      0x00\n        /* \"SimpleStaking.sol\":2875:2897  StakeInfo storage user */\n      dup1\n        /* \"SimpleStaking.sol\":2900:2906  stakes */\n      0x03\n        /* \"SimpleStaking.sol\":2900:2913  stakes[_user] */\n      0x00\n        /* \"SimpleStaking.sol\":2907:2912  _user */\n      dup5\n        /* \"SimpleStaking.sol\":2900:2913  stakes[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SimpleStaking.sol\":2875:2913  StakeInfo storage user = stakes[_user] */\n      swap1\n      pop\n        /* \"SimpleStaking.sol\":2924:2944  uint256 blocksPassed */\n      0x00\n        /* \"SimpleStaking.sol\":2962:2966  user */\n      dup2\n        /* \"SimpleStaking.sol\":2962:2982  user.lastStakedBlock */\n      0x02\n      add\n      sload\n        /* \"SimpleStaking.sol\":2947:2959  block.number */\n      number\n        /* \"SimpleStaking.sol\":2947:2982  block.number - user.lastStakedBlock */\n      tag_99\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_99:\n        /* \"SimpleStaking.sol\":2924:2982  uint256 blocksPassed = block.number - user.lastStakedBlock */\n      swap1\n      pop\n        /* \"SimpleStaking.sol\":3052:3056  1e18 */\n      0x0de0b6b3a7640000\n        /* \"SimpleStaking.sol\":3036:3048  blocksPassed */\n      dup2\n        /* \"SimpleStaking.sol\":3015:3033  rewardRatePerBlock */\n      sload(0x02)\n        /* \"SimpleStaking.sol\":3001:3005  user */\n      dup5\n        /* \"SimpleStaking.sol\":3001:3012  user.amount */\n      0x00\n      add\n      sload\n        /* \"SimpleStaking.sol\":3001:3033  user.amount * rewardRatePerBlock */\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"SimpleStaking.sol\":3001:3048  user.amount * rewardRatePerBlock * blocksPassed */\n      tag_102\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_102:\n        /* \"SimpleStaking.sol\":3000:3056  (user.amount * rewardRatePerBlock * blocksPassed) / 1e18 */\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"SimpleStaking.sol\":2993:3056  return (user.amount * rewardRatePerBlock * blocksPassed) / 1e18 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"SimpleStaking.sol\":2794:3064  function calculateReward(address _user) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_108\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_121:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_123:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_124:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_153\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_123\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_125:\n        /* \"#utility.yul\":641:665   */\n      tag_155\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_124\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_156\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_156:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_126:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_158\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_125\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_16:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_161\n      tag_121\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":917:1036   */\n    tag_160:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_162\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_126\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_127:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_128:\n        /* \"#utility.yul\":1346:1370   */\n      tag_165\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_127\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1825   */\n    tag_19:\n        /* \"#utility.yul\":1532:1536   */\n      0x00\n        /* \"#utility.yul\":1570:1572   */\n      0x60\n        /* \"#utility.yul\":1559:1568   */\n      dup3\n        /* \"#utility.yul\":1555:1573   */\n      add\n        /* \"#utility.yul\":1547:1573   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1654   */\n      tag_167\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1636:1653   */\n      add\n        /* \"#utility.yul\":1627:1633   */\n      dup7\n        /* \"#utility.yul\":1583:1654   */\n      tag_128\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1664:1736   */\n      tag_168\n        /* \"#utility.yul\":1732:1734   */\n      0x20\n        /* \"#utility.yul\":1721:1730   */\n      dup4\n        /* \"#utility.yul\":1717:1735   */\n      add\n        /* \"#utility.yul\":1708:1714   */\n      dup6\n        /* \"#utility.yul\":1664:1736   */\n      tag_128\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1746:1818   */\n      tag_169\n        /* \"#utility.yul\":1814:1816   */\n      0x40\n        /* \"#utility.yul\":1803:1812   */\n      dup4\n        /* \"#utility.yul\":1799:1817   */\n      add\n        /* \"#utility.yul\":1790:1796   */\n      dup5\n        /* \"#utility.yul\":1746:1818   */\n      tag_128\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1383:1825   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1831:1953   */\n    tag_129:\n        /* \"#utility.yul\":1904:1928   */\n      tag_171\n        /* \"#utility.yul\":1922:1927   */\n      dup2\n        /* \"#utility.yul\":1904:1928   */\n      tag_127\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1897:1902   */\n      dup2\n        /* \"#utility.yul\":1894:1929   */\n      eq\n        /* \"#utility.yul\":1884:1947   */\n      tag_172\n      jumpi\n        /* \"#utility.yul\":1943:1944   */\n      0x00\n        /* \"#utility.yul\":1940:1941   */\n      dup1\n        /* \"#utility.yul\":1933:1945   */\n      revert\n        /* \"#utility.yul\":1884:1947   */\n    tag_172:\n        /* \"#utility.yul\":1831:1953   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1959:2098   */\n    tag_130:\n        /* \"#utility.yul\":2005:2010   */\n      0x00\n        /* \"#utility.yul\":2043:2049   */\n      dup2\n        /* \"#utility.yul\":2030:2050   */\n      calldataload\n        /* \"#utility.yul\":2021:2050   */\n      swap1\n      pop\n        /* \"#utility.yul\":2059:2092   */\n      tag_174\n        /* \"#utility.yul\":2086:2091   */\n      dup2\n        /* \"#utility.yul\":2059:2092   */\n      tag_129\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1959:2098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2104:2433   */\n    tag_22:\n        /* \"#utility.yul\":2163:2169   */\n      0x00\n        /* \"#utility.yul\":2212:2214   */\n      0x20\n        /* \"#utility.yul\":2200:2209   */\n      dup3\n        /* \"#utility.yul\":2191:2198   */\n      dup5\n        /* \"#utility.yul\":2187:2210   */\n      sub\n        /* \"#utility.yul\":2183:2215   */\n      slt\n        /* \"#utility.yul\":2180:2299   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":2218:2297   */\n      tag_177\n      tag_121\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2180:2299   */\n    tag_176:\n        /* \"#utility.yul\":2338:2339   */\n      0x00\n        /* \"#utility.yul\":2363:2416   */\n      tag_178\n        /* \"#utility.yul\":2408:2415   */\n      dup5\n        /* \"#utility.yul\":2399:2405   */\n      dup3\n        /* \"#utility.yul\":2388:2397   */\n      dup6\n        /* \"#utility.yul\":2384:2406   */\n      add\n        /* \"#utility.yul\":2363:2416   */\n      tag_130\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2353:2416   */\n      swap2\n      pop\n        /* \"#utility.yul\":2309:2426   */\n      pop\n        /* \"#utility.yul\":2104:2433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2439:2661   */\n    tag_28:\n        /* \"#utility.yul\":2532:2536   */\n      0x00\n        /* \"#utility.yul\":2570:2572   */\n      0x20\n        /* \"#utility.yul\":2559:2568   */\n      dup3\n        /* \"#utility.yul\":2555:2573   */\n      add\n        /* \"#utility.yul\":2547:2573   */\n      swap1\n      pop\n        /* \"#utility.yul\":2583:2654   */\n      tag_180\n        /* \"#utility.yul\":2651:2652   */\n      0x00\n        /* \"#utility.yul\":2640:2649   */\n      dup4\n        /* \"#utility.yul\":2636:2653   */\n      add\n        /* \"#utility.yul\":2627:2633   */\n      dup5\n        /* \"#utility.yul\":2583:2654   */\n      tag_128\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2439:2661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2667:2727   */\n    tag_131:\n        /* \"#utility.yul\":2695:2698   */\n      0x00\n        /* \"#utility.yul\":2716:2721   */\n      dup2\n        /* \"#utility.yul\":2709:2721   */\n      swap1\n      pop\n        /* \"#utility.yul\":2667:2727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2733:2875   */\n    tag_132:\n        /* \"#utility.yul\":2783:2792   */\n      0x00\n        /* \"#utility.yul\":2816:2869   */\n      tag_183\n        /* \"#utility.yul\":2834:2868   */\n      tag_184\n        /* \"#utility.yul\":2843:2867   */\n      tag_185\n        /* \"#utility.yul\":2861:2866   */\n      dup5\n        /* \"#utility.yul\":2843:2867   */\n      tag_123\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":2834:2868   */\n      tag_131\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":2816:2869   */\n      tag_123\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2803:2869   */\n      swap1\n      pop\n        /* \"#utility.yul\":2733:2875   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2881:3007   */\n    tag_133:\n        /* \"#utility.yul\":2931:2940   */\n      0x00\n        /* \"#utility.yul\":2964:3001   */\n      tag_187\n        /* \"#utility.yul\":2995:3000   */\n      dup3\n        /* \"#utility.yul\":2964:3001   */\n      tag_132\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2951:3001   */\n      swap1\n      pop\n        /* \"#utility.yul\":2881:3007   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3013:3153   */\n    tag_134:\n        /* \"#utility.yul\":3077:3086   */\n      0x00\n        /* \"#utility.yul\":3110:3147   */\n      tag_189\n        /* \"#utility.yul\":3141:3146   */\n      dup3\n        /* \"#utility.yul\":3110:3147   */\n      tag_133\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3097:3147   */\n      swap1\n      pop\n        /* \"#utility.yul\":3013:3153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3159:3318   */\n    tag_135:\n        /* \"#utility.yul\":3260:3311   */\n      tag_191\n        /* \"#utility.yul\":3305:3310   */\n      dup2\n        /* \"#utility.yul\":3260:3311   */\n      tag_134\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3255:3258   */\n      dup3\n        /* \"#utility.yul\":3248:3312   */\n      mstore\n        /* \"#utility.yul\":3159:3318   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3324:3574   */\n    tag_34:\n        /* \"#utility.yul\":3431:3435   */\n      0x00\n        /* \"#utility.yul\":3469:3471   */\n      0x20\n        /* \"#utility.yul\":3458:3467   */\n      dup3\n        /* \"#utility.yul\":3454:3472   */\n      add\n        /* \"#utility.yul\":3446:3472   */\n      swap1\n      pop\n        /* \"#utility.yul\":3482:3567   */\n      tag_193\n        /* \"#utility.yul\":3564:3565   */\n      0x00\n        /* \"#utility.yul\":3553:3562   */\n      dup4\n        /* \"#utility.yul\":3549:3566   */\n      add\n        /* \"#utility.yul\":3540:3546   */\n      dup5\n        /* \"#utility.yul\":3482:3567   */\n      tag_135\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3324:3574   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3580:3698   */\n    tag_136:\n        /* \"#utility.yul\":3667:3691   */\n      tag_195\n        /* \"#utility.yul\":3685:3690   */\n      dup2\n        /* \"#utility.yul\":3667:3691   */\n      tag_124\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3662:3665   */\n      dup3\n        /* \"#utility.yul\":3655:3692   */\n      mstore\n        /* \"#utility.yul\":3580:3698   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3704:3926   */\n    tag_38:\n        /* \"#utility.yul\":3797:3801   */\n      0x00\n        /* \"#utility.yul\":3835:3837   */\n      0x20\n        /* \"#utility.yul\":3824:3833   */\n      dup3\n        /* \"#utility.yul\":3820:3838   */\n      add\n        /* \"#utility.yul\":3812:3838   */\n      swap1\n      pop\n        /* \"#utility.yul\":3848:3919   */\n      tag_197\n        /* \"#utility.yul\":3916:3917   */\n      0x00\n        /* \"#utility.yul\":3905:3914   */\n      dup4\n        /* \"#utility.yul\":3901:3918   */\n      add\n        /* \"#utility.yul\":3892:3898   */\n      dup5\n        /* \"#utility.yul\":3848:3919   */\n      tag_136\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3704:3926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3932:4101   */\n    tag_137:\n        /* \"#utility.yul\":4016:4027   */\n      0x00\n        /* \"#utility.yul\":4050:4056   */\n      dup3\n        /* \"#utility.yul\":4045:4048   */\n      dup3\n        /* \"#utility.yul\":4038:4057   */\n      mstore\n        /* \"#utility.yul\":4090:4094   */\n      0x20\n        /* \"#utility.yul\":4085:4088   */\n      dup3\n        /* \"#utility.yul\":4081:4095   */\n      add\n        /* \"#utility.yul\":4066:4095   */\n      swap1\n      pop\n        /* \"#utility.yul\":3932:4101   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4107:4274   */\n    tag_138:\n        /* \"#utility.yul\":4247:4266   */\n      0x4e6f7420656e6f756768207374616b6564000000000000000000000000000000\n        /* \"#utility.yul\":4243:4244   */\n      0x00\n        /* \"#utility.yul\":4235:4241   */\n      dup3\n        /* \"#utility.yul\":4231:4245   */\n      add\n        /* \"#utility.yul\":4224:4267   */\n      mstore\n        /* \"#utility.yul\":4107:4274   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4280:4646   */\n    tag_139:\n        /* \"#utility.yul\":4422:4425   */\n      0x00\n        /* \"#utility.yul\":4443:4510   */\n      tag_201\n        /* \"#utility.yul\":4507:4509   */\n      0x11\n        /* \"#utility.yul\":4502:4505   */\n      dup4\n        /* \"#utility.yul\":4443:4510   */\n      tag_137\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":4436:4510   */\n      swap2\n      pop\n        /* \"#utility.yul\":4519:4612   */\n      tag_202\n        /* \"#utility.yul\":4608:4611   */\n      dup3\n        /* \"#utility.yul\":4519:4612   */\n      tag_138\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4637:4639   */\n      0x20\n        /* \"#utility.yul\":4632:4635   */\n      dup3\n        /* \"#utility.yul\":4628:4640   */\n      add\n        /* \"#utility.yul\":4621:4640   */\n      swap1\n      pop\n        /* \"#utility.yul\":4280:4646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4652:5071   */\n    tag_55:\n        /* \"#utility.yul\":4818:4822   */\n      0x00\n        /* \"#utility.yul\":4856:4858   */\n      0x20\n        /* \"#utility.yul\":4845:4854   */\n      dup3\n        /* \"#utility.yul\":4841:4859   */\n      add\n        /* \"#utility.yul\":4833:4859   */\n      swap1\n      pop\n        /* \"#utility.yul\":4905:4914   */\n      dup2\n        /* \"#utility.yul\":4899:4903   */\n      dup2\n        /* \"#utility.yul\":4895:4915   */\n      sub\n        /* \"#utility.yul\":4891:4892   */\n      0x00\n        /* \"#utility.yul\":4880:4889   */\n      dup4\n        /* \"#utility.yul\":4876:4893   */\n      add\n        /* \"#utility.yul\":4869:4916   */\n      mstore\n        /* \"#utility.yul\":4933:5064   */\n      tag_204\n        /* \"#utility.yul\":5059:5063   */\n      dup2\n        /* \"#utility.yul\":4933:5064   */\n      tag_139\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4925:5064   */\n      swap1\n      pop\n        /* \"#utility.yul\":4652:5071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5077:5257   */\n    tag_140:\n        /* \"#utility.yul\":5125:5202   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5122:5123   */\n      0x00\n        /* \"#utility.yul\":5115:5203   */\n      mstore\n        /* \"#utility.yul\":5222:5226   */\n      0x11\n        /* \"#utility.yul\":5219:5220   */\n      0x04\n        /* \"#utility.yul\":5212:5227   */\n      mstore\n        /* \"#utility.yul\":5246:5250   */\n      0x24\n        /* \"#utility.yul\":5243:5244   */\n      0x00\n        /* \"#utility.yul\":5236:5251   */\n      revert\n        /* \"#utility.yul\":5263:5454   */\n    tag_58:\n        /* \"#utility.yul\":5303:5306   */\n      0x00\n        /* \"#utility.yul\":5322:5342   */\n      tag_207\n        /* \"#utility.yul\":5340:5341   */\n      dup3\n        /* \"#utility.yul\":5322:5342   */\n      tag_127\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":5317:5342   */\n      swap2\n      pop\n        /* \"#utility.yul\":5356:5376   */\n      tag_208\n        /* \"#utility.yul\":5374:5375   */\n      dup4\n        /* \"#utility.yul\":5356:5376   */\n      tag_127\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5351:5376   */\n      swap3\n      pop\n        /* \"#utility.yul\":5399:5400   */\n      dup3\n        /* \"#utility.yul\":5396:5397   */\n      dup3\n        /* \"#utility.yul\":5392:5401   */\n      add\n        /* \"#utility.yul\":5385:5401   */\n      swap1\n      pop\n        /* \"#utility.yul\":5420:5423   */\n      dup1\n        /* \"#utility.yul\":5417:5418   */\n      dup3\n        /* \"#utility.yul\":5414:5424   */\n      gt\n        /* \"#utility.yul\":5411:5447   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":5427:5445   */\n      tag_210\n      tag_140\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":5411:5447   */\n    tag_209:\n        /* \"#utility.yul\":5263:5454   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5460:5654   */\n    tag_60:\n        /* \"#utility.yul\":5500:5504   */\n      0x00\n        /* \"#utility.yul\":5520:5540   */\n      tag_212\n        /* \"#utility.yul\":5538:5539   */\n      dup3\n        /* \"#utility.yul\":5520:5540   */\n      tag_127\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5515:5540   */\n      swap2\n      pop\n        /* \"#utility.yul\":5554:5574   */\n      tag_213\n        /* \"#utility.yul\":5572:5573   */\n      dup4\n        /* \"#utility.yul\":5554:5574   */\n      tag_127\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5549:5574   */\n      swap3\n      pop\n        /* \"#utility.yul\":5598:5599   */\n      dup3\n        /* \"#utility.yul\":5595:5596   */\n      dup3\n        /* \"#utility.yul\":5591:5600   */\n      sub\n        /* \"#utility.yul\":5583:5600   */\n      swap1\n      pop\n        /* \"#utility.yul\":5622:5623   */\n      dup2\n        /* \"#utility.yul\":5616:5620   */\n      dup2\n        /* \"#utility.yul\":5613:5624   */\n      gt\n        /* \"#utility.yul\":5610:5647   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":5627:5645   */\n      tag_215\n      tag_140\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":5610:5647   */\n    tag_214:\n        /* \"#utility.yul\":5460:5654   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5660:5992   */\n    tag_62:\n        /* \"#utility.yul\":5781:5785   */\n      0x00\n        /* \"#utility.yul\":5819:5821   */\n      0x40\n        /* \"#utility.yul\":5808:5817   */\n      dup3\n        /* \"#utility.yul\":5804:5822   */\n      add\n        /* \"#utility.yul\":5796:5822   */\n      swap1\n      pop\n        /* \"#utility.yul\":5832:5903   */\n      tag_217\n        /* \"#utility.yul\":5900:5901   */\n      0x00\n        /* \"#utility.yul\":5889:5898   */\n      dup4\n        /* \"#utility.yul\":5885:5902   */\n      add\n        /* \"#utility.yul\":5876:5882   */\n      dup6\n        /* \"#utility.yul\":5832:5903   */\n      tag_136\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":5913:5985   */\n      tag_218\n        /* \"#utility.yul\":5981:5983   */\n      0x20\n        /* \"#utility.yul\":5970:5979   */\n      dup4\n        /* \"#utility.yul\":5966:5984   */\n      add\n        /* \"#utility.yul\":5957:5963   */\n      dup5\n        /* \"#utility.yul\":5913:5985   */\n      tag_128\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5660:5992   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5998:6088   */\n    tag_141:\n        /* \"#utility.yul\":6032:6039   */\n      0x00\n        /* \"#utility.yul\":6075:6080   */\n      dup2\n        /* \"#utility.yul\":6068:6081   */\n      iszero\n        /* \"#utility.yul\":6061:6082   */\n      iszero\n        /* \"#utility.yul\":6050:6082   */\n      swap1\n      pop\n        /* \"#utility.yul\":5998:6088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6094:6210   */\n    tag_142:\n        /* \"#utility.yul\":6164:6185   */\n      tag_221\n        /* \"#utility.yul\":6179:6184   */\n      dup2\n        /* \"#utility.yul\":6164:6185   */\n      tag_141\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":6157:6162   */\n      dup2\n        /* \"#utility.yul\":6154:6186   */\n      eq\n        /* \"#utility.yul\":6144:6204   */\n      tag_222\n      jumpi\n        /* \"#utility.yul\":6200:6201   */\n      0x00\n        /* \"#utility.yul\":6197:6198   */\n      dup1\n        /* \"#utility.yul\":6190:6202   */\n      revert\n        /* \"#utility.yul\":6144:6204   */\n    tag_222:\n        /* \"#utility.yul\":6094:6210   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6216:6353   */\n    tag_143:\n        /* \"#utility.yul\":6270:6275   */\n      0x00\n        /* \"#utility.yul\":6301:6307   */\n      dup2\n        /* \"#utility.yul\":6295:6308   */\n      mload\n        /* \"#utility.yul\":6286:6308   */\n      swap1\n      pop\n        /* \"#utility.yul\":6317:6347   */\n      tag_224\n        /* \"#utility.yul\":6341:6346   */\n      dup2\n        /* \"#utility.yul\":6317:6347   */\n      tag_142\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":6216:6353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6359:6704   */\n    tag_66:\n        /* \"#utility.yul\":6426:6432   */\n      0x00\n        /* \"#utility.yul\":6475:6477   */\n      0x20\n        /* \"#utility.yul\":6463:6472   */\n      dup3\n        /* \"#utility.yul\":6454:6461   */\n      dup5\n        /* \"#utility.yul\":6450:6473   */\n      sub\n        /* \"#utility.yul\":6446:6478   */\n      slt\n        /* \"#utility.yul\":6443:6562   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":6481:6560   */\n      tag_227\n      tag_121\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":6443:6562   */\n    tag_226:\n        /* \"#utility.yul\":6601:6602   */\n      0x00\n        /* \"#utility.yul\":6626:6687   */\n      tag_228\n        /* \"#utility.yul\":6679:6686   */\n      dup5\n        /* \"#utility.yul\":6670:6676   */\n      dup3\n        /* \"#utility.yul\":6659:6668   */\n      dup6\n        /* \"#utility.yul\":6655:6677   */\n      add\n        /* \"#utility.yul\":6626:6687   */\n      tag_143\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":6616:6687   */\n      swap2\n      pop\n        /* \"#utility.yul\":6572:6697   */\n      pop\n        /* \"#utility.yul\":6359:6704   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6710:7042   */\n    tag_73:\n        /* \"#utility.yul\":6831:6835   */\n      0x00\n        /* \"#utility.yul\":6869:6871   */\n      0x40\n        /* \"#utility.yul\":6858:6867   */\n      dup3\n        /* \"#utility.yul\":6854:6872   */\n      add\n        /* \"#utility.yul\":6846:6872   */\n      swap1\n      pop\n        /* \"#utility.yul\":6882:6953   */\n      tag_230\n        /* \"#utility.yul\":6950:6951   */\n      0x00\n        /* \"#utility.yul\":6939:6948   */\n      dup4\n        /* \"#utility.yul\":6935:6952   */\n      add\n        /* \"#utility.yul\":6926:6932   */\n      dup6\n        /* \"#utility.yul\":6882:6953   */\n      tag_128\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":6963:7035   */\n      tag_231\n        /* \"#utility.yul\":7031:7033   */\n      0x20\n        /* \"#utility.yul\":7020:7029   */\n      dup4\n        /* \"#utility.yul\":7016:7034   */\n      add\n        /* \"#utility.yul\":7007:7013   */\n      dup5\n        /* \"#utility.yul\":6963:7035   */\n      tag_128\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":6710:7042   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7048:7219   */\n    tag_144:\n        /* \"#utility.yul\":7188:7211   */\n      0x43616e6e6f74207374616b65203020746f6b656e730000000000000000000000\n        /* \"#utility.yul\":7184:7185   */\n      0x00\n        /* \"#utility.yul\":7176:7182   */\n      dup3\n        /* \"#utility.yul\":7172:7186   */\n      add\n        /* \"#utility.yul\":7165:7212   */\n      mstore\n        /* \"#utility.yul\":7048:7219   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7225:7591   */\n    tag_145:\n        /* \"#utility.yul\":7367:7370   */\n      0x00\n        /* \"#utility.yul\":7388:7455   */\n      tag_234\n        /* \"#utility.yul\":7452:7454   */\n      0x15\n        /* \"#utility.yul\":7447:7450   */\n      dup4\n        /* \"#utility.yul\":7388:7455   */\n      tag_137\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":7381:7455   */\n      swap2\n      pop\n        /* \"#utility.yul\":7464:7557   */\n      tag_235\n        /* \"#utility.yul\":7553:7556   */\n      dup3\n        /* \"#utility.yul\":7464:7557   */\n      tag_144\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":7582:7584   */\n      0x20\n        /* \"#utility.yul\":7577:7580   */\n      dup3\n        /* \"#utility.yul\":7573:7585   */\n      add\n        /* \"#utility.yul\":7566:7585   */\n      swap1\n      pop\n        /* \"#utility.yul\":7225:7591   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7597:8016   */\n    tag_87:\n        /* \"#utility.yul\":7763:7767   */\n      0x00\n        /* \"#utility.yul\":7801:7803   */\n      0x20\n        /* \"#utility.yul\":7790:7799   */\n      dup3\n        /* \"#utility.yul\":7786:7804   */\n      add\n        /* \"#utility.yul\":7778:7804   */\n      swap1\n      pop\n        /* \"#utility.yul\":7850:7859   */\n      dup2\n        /* \"#utility.yul\":7844:7848   */\n      dup2\n        /* \"#utility.yul\":7840:7860   */\n      sub\n        /* \"#utility.yul\":7836:7837   */\n      0x00\n        /* \"#utility.yul\":7825:7834   */\n      dup4\n        /* \"#utility.yul\":7821:7838   */\n      add\n        /* \"#utility.yul\":7814:7861   */\n      mstore\n        /* \"#utility.yul\":7878:8009   */\n      tag_237\n        /* \"#utility.yul\":8004:8008   */\n      dup2\n        /* \"#utility.yul\":7878:8009   */\n      tag_145\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":7870:8009   */\n      swap1\n      pop\n        /* \"#utility.yul\":7597:8016   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8022:8464   */\n    tag_92:\n        /* \"#utility.yul\":8171:8175   */\n      0x00\n        /* \"#utility.yul\":8209:8211   */\n      0x60\n        /* \"#utility.yul\":8198:8207   */\n      dup3\n        /* \"#utility.yul\":8194:8212   */\n      add\n        /* \"#utility.yul\":8186:8212   */\n      swap1\n      pop\n        /* \"#utility.yul\":8222:8293   */\n      tag_239\n        /* \"#utility.yul\":8290:8291   */\n      0x00\n        /* \"#utility.yul\":8279:8288   */\n      dup4\n        /* \"#utility.yul\":8275:8292   */\n      add\n        /* \"#utility.yul\":8266:8272   */\n      dup7\n        /* \"#utility.yul\":8222:8293   */\n      tag_136\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":8303:8375   */\n      tag_240\n        /* \"#utility.yul\":8371:8373   */\n      0x20\n        /* \"#utility.yul\":8360:8369   */\n      dup4\n        /* \"#utility.yul\":8356:8374   */\n      add\n        /* \"#utility.yul\":8347:8353   */\n      dup6\n        /* \"#utility.yul\":8303:8375   */\n      tag_136\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":8385:8457   */\n      tag_241\n        /* \"#utility.yul\":8453:8455   */\n      0x40\n        /* \"#utility.yul\":8442:8451   */\n      dup4\n        /* \"#utility.yul\":8438:8456   */\n      add\n        /* \"#utility.yul\":8429:8435   */\n      dup5\n        /* \"#utility.yul\":8385:8457   */\n      tag_128\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":8022:8464   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8470:8880   */\n    tag_101:\n        /* \"#utility.yul\":8510:8517   */\n      0x00\n        /* \"#utility.yul\":8533:8553   */\n      tag_243\n        /* \"#utility.yul\":8551:8552   */\n      dup3\n        /* \"#utility.yul\":8533:8553   */\n      tag_127\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":8528:8553   */\n      swap2\n      pop\n        /* \"#utility.yul\":8567:8587   */\n      tag_244\n        /* \"#utility.yul\":8585:8586   */\n      dup4\n        /* \"#utility.yul\":8567:8587   */\n      tag_127\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":8562:8587   */\n      swap3\n      pop\n        /* \"#utility.yul\":8622:8623   */\n      dup3\n        /* \"#utility.yul\":8619:8620   */\n      dup3\n        /* \"#utility.yul\":8615:8624   */\n      mul\n        /* \"#utility.yul\":8644:8674   */\n      tag_245\n        /* \"#utility.yul\":8662:8673   */\n      dup2\n        /* \"#utility.yul\":8644:8674   */\n      tag_127\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":8633:8674   */\n      swap2\n      pop\n        /* \"#utility.yul\":8823:8824   */\n      dup3\n        /* \"#utility.yul\":8814:8821   */\n      dup3\n        /* \"#utility.yul\":8810:8825   */\n      div\n        /* \"#utility.yul\":8807:8808   */\n      dup5\n        /* \"#utility.yul\":8804:8826   */\n      eq\n        /* \"#utility.yul\":8784:8785   */\n      dup4\n        /* \"#utility.yul\":8777:8786   */\n      iszero\n        /* \"#utility.yul\":8757:8840   */\n      or\n        /* \"#utility.yul\":8734:8873   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":8853:8871   */\n      tag_247\n      tag_140\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":8734:8873   */\n    tag_246:\n        /* \"#utility.yul\":8518:8880   */\n      pop\n        /* \"#utility.yul\":8470:8880   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8886:9066   */\n    tag_146:\n        /* \"#utility.yul\":8934:9011   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8931:8932   */\n      0x00\n        /* \"#utility.yul\":8924:9012   */\n      mstore\n        /* \"#utility.yul\":9031:9035   */\n      0x12\n        /* \"#utility.yul\":9028:9029   */\n      0x04\n        /* \"#utility.yul\":9021:9036   */\n      mstore\n        /* \"#utility.yul\":9055:9059   */\n      0x24\n        /* \"#utility.yul\":9052:9053   */\n      0x00\n        /* \"#utility.yul\":9045:9060   */\n      revert\n        /* \"#utility.yul\":9072:9257   */\n    tag_104:\n        /* \"#utility.yul\":9112:9113   */\n      0x00\n        /* \"#utility.yul\":9129:9149   */\n      tag_250\n        /* \"#utility.yul\":9147:9148   */\n      dup3\n        /* \"#utility.yul\":9129:9149   */\n      tag_127\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":9124:9149   */\n      swap2\n      pop\n        /* \"#utility.yul\":9163:9183   */\n      tag_251\n        /* \"#utility.yul\":9181:9182   */\n      dup4\n        /* \"#utility.yul\":9163:9183   */\n      tag_127\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":9158:9183   */\n      swap3\n      pop\n        /* \"#utility.yul\":9202:9203   */\n      dup3\n        /* \"#utility.yul\":9192:9227   */\n      tag_252\n      jumpi\n        /* \"#utility.yul\":9207:9225   */\n      tag_253\n      tag_146\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":9192:9227   */\n    tag_252:\n        /* \"#utility.yul\":9249:9250   */\n      dup3\n        /* \"#utility.yul\":9246:9247   */\n      dup3\n        /* \"#utility.yul\":9242:9251   */\n      div\n        /* \"#utility.yul\":9237:9251   */\n      swap1\n      pop\n        /* \"#utility.yul\":9072:9257   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204ee478acf463d175d6e232d63b558849deb7c5a6c8f24726edccfe3ad133ecb064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1011": {
									"entryPoint": null,
									"id": 1011,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 433,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_address_fromMemory": {
									"entryPoint": 771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_19c12d387005db191068f08c80e9280fdba4fa8902b3de3d392c34dbe7931e16_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_19c12d387005db191068f08c80e9280fdba4fa8902b3de3d392c34dbe7931e16__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 626,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_19c12d387005db191068f08c80e9280fdba4fa8902b3de3d392c34dbe7931e16": {
									"entryPoint": 1011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4344:7",
										"nodeType": "YulBlock",
										"src": "0:4344:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "890:32:7",
													"nodeType": "YulBlock",
													"src": "890:32:7",
													"statements": [
														{
															"nativeSrc": "900:16:7",
															"nodeType": "YulAssignment",
															"src": "900:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:7",
																"nodeType": "YulIdentifier",
																"src": "911:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:7",
														"nodeType": "YulTypedName",
														"src": "872:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:7",
														"nodeType": "YulTypedName",
														"src": "882:7:7",
														"type": ""
													}
												],
												"src": "845:77:7"
											},
											{
												"body": {
													"nativeSrc": "971:79:7",
													"nodeType": "YulBlock",
													"src": "971:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:7",
																"nodeType": "YulBlock",
																"src": "1028:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:7"
																			},
																			"nativeSrc": "1030:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:7"
																		},
																		"nativeSrc": "1030:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:7"
																				},
																				"nativeSrc": "1001:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:7"
																		},
																		"nativeSrc": "991:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:7"
																},
																"nativeSrc": "984:43:7",
																"nodeType": "YulFunctionCall",
																"src": "984:43:7"
															},
															"nativeSrc": "981:63:7",
															"nodeType": "YulIf",
															"src": "981:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:7",
														"nodeType": "YulTypedName",
														"src": "964:5:7",
														"type": ""
													}
												],
												"src": "928:122:7"
											},
											{
												"body": {
													"nativeSrc": "1119:80:7",
													"nodeType": "YulBlock",
													"src": "1119:80:7",
													"statements": [
														{
															"nativeSrc": "1129:22:7",
															"nodeType": "YulAssignment",
															"src": "1129:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:7"
																},
																"nativeSrc": "1138:13:7",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:7"
																},
																"nativeSrc": "1160:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:7"
															},
															"nativeSrc": "1160:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:7",
														"nodeType": "YulTypedName",
														"src": "1097:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:7",
														"nodeType": "YulTypedName",
														"src": "1105:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:7",
														"nodeType": "YulTypedName",
														"src": "1113:5:7",
														"type": ""
													}
												],
												"src": "1056:143:7"
											},
											{
												"body": {
													"nativeSrc": "1316:552:7",
													"nodeType": "YulBlock",
													"src": "1316:552:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:7",
																"nodeType": "YulBlock",
																"src": "1362:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:7"
																			},
																			"nativeSrc": "1364:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:7"
																		},
																		"nativeSrc": "1364:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:7"
																		},
																		"nativeSrc": "1333:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:7"
																},
																"nativeSrc": "1329:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:7"
															},
															"nativeSrc": "1326:119:7",
															"nodeType": "YulIf",
															"src": "1326:119:7"
														},
														{
															"nativeSrc": "1455:128:7",
															"nodeType": "YulBlock",
															"src": "1455:128:7",
															"statements": [
																{
																	"nativeSrc": "1470:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:7"
																				},
																				"nativeSrc": "1541:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1509:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:7"
																		},
																		"nativeSrc": "1509:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:7",
															"nodeType": "YulBlock",
															"src": "1593:129:7",
															"statements": [
																{
																	"nativeSrc": "1608:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:7"
																				},
																				"nativeSrc": "1680:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1648:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:7"
																		},
																		"nativeSrc": "1648:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:7",
															"nodeType": "YulBlock",
															"src": "1732:129:7",
															"statements": [
																{
																	"nativeSrc": "1747:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:7"
																				},
																				"nativeSrc": "1819:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1787:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:7"
																		},
																		"nativeSrc": "1787:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_address_fromMemory",
												"nativeSrc": "1205:663:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:7",
														"nodeType": "YulTypedName",
														"src": "1270:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:7",
														"nodeType": "YulTypedName",
														"src": "1281:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:7",
														"nodeType": "YulTypedName",
														"src": "1293:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:7",
														"nodeType": "YulTypedName",
														"src": "1301:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:7",
														"nodeType": "YulTypedName",
														"src": "1309:6:7",
														"type": ""
													}
												],
												"src": "1205:663:7"
											},
											{
												"body": {
													"nativeSrc": "1939:53:7",
													"nodeType": "YulBlock",
													"src": "1939:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1956:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1956:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1979:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1979:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1961:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1961:17:7"
																		},
																		"nativeSrc": "1961:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1961:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1949:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1949:6:7"
																},
																"nativeSrc": "1949:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1949:37:7"
															},
															"nativeSrc": "1949:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1949:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1874:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1927:5:7",
														"nodeType": "YulTypedName",
														"src": "1927:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1934:3:7",
														"nodeType": "YulTypedName",
														"src": "1934:3:7",
														"type": ""
													}
												],
												"src": "1874:118:7"
											},
											{
												"body": {
													"nativeSrc": "2096:124:7",
													"nodeType": "YulBlock",
													"src": "2096:124:7",
													"statements": [
														{
															"nativeSrc": "2106:26:7",
															"nodeType": "YulAssignment",
															"src": "2106:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2118:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2118:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2129:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2129:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2114:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2114:3:7"
																},
																"nativeSrc": "2114:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2114:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2106:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2106:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2186:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2186:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2199:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2199:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2210:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2210:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2195:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:7"
																		},
																		"nativeSrc": "2195:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2195:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2142:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2142:43:7"
																},
																"nativeSrc": "2142:71:7",
																"nodeType": "YulFunctionCall",
																"src": "2142:71:7"
															},
															"nativeSrc": "2142:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "2142:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1998:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2068:9:7",
														"nodeType": "YulTypedName",
														"src": "2068:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2080:6:7",
														"nodeType": "YulTypedName",
														"src": "2080:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2091:4:7",
														"nodeType": "YulTypedName",
														"src": "2091:4:7",
														"type": ""
													}
												],
												"src": "1998:222:7"
											},
											{
												"body": {
													"nativeSrc": "2322:73:7",
													"nodeType": "YulBlock",
													"src": "2322:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2339:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2339:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2344:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2344:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2332:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2332:6:7"
																},
																"nativeSrc": "2332:19:7",
																"nodeType": "YulFunctionCall",
																"src": "2332:19:7"
															},
															"nativeSrc": "2332:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "2332:19:7"
														},
														{
															"nativeSrc": "2360:29:7",
															"nodeType": "YulAssignment",
															"src": "2360:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2379:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2379:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2384:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2384:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2375:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2375:3:7"
																},
																"nativeSrc": "2375:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2375:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2360:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "2360:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2226:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2294:3:7",
														"nodeType": "YulTypedName",
														"src": "2294:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2299:6:7",
														"nodeType": "YulTypedName",
														"src": "2299:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2310:11:7",
														"nodeType": "YulTypedName",
														"src": "2310:11:7",
														"type": ""
													}
												],
												"src": "2226:169:7"
											},
											{
												"body": {
													"nativeSrc": "2507:65:7",
													"nodeType": "YulBlock",
													"src": "2507:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2529:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2529:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2537:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2537:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2525:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2525:3:7"
																		},
																		"nativeSrc": "2525:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2525:14:7"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "2541:23:7",
																		"nodeType": "YulLiteral",
																		"src": "2541:23:7",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2518:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:7"
																},
																"nativeSrc": "2518:47:7",
																"nodeType": "YulFunctionCall",
																"src": "2518:47:7"
															},
															"nativeSrc": "2518:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "2518:47:7"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nativeSrc": "2401:171:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2499:6:7",
														"nodeType": "YulTypedName",
														"src": "2499:6:7",
														"type": ""
													}
												],
												"src": "2401:171:7"
											},
											{
												"body": {
													"nativeSrc": "2724:220:7",
													"nodeType": "YulBlock",
													"src": "2724:220:7",
													"statements": [
														{
															"nativeSrc": "2734:74:7",
															"nodeType": "YulAssignment",
															"src": "2734:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2800:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2800:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2805:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2805:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2741:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "2741:58:7"
																},
																"nativeSrc": "2741:67:7",
																"nodeType": "YulFunctionCall",
																"src": "2741:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2734:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2734:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2906:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2906:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nativeSrc": "2817:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "2817:88:7"
																},
																"nativeSrc": "2817:93:7",
																"nodeType": "YulFunctionCall",
																"src": "2817:93:7"
															},
															"nativeSrc": "2817:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "2817:93:7"
														},
														{
															"nativeSrc": "2919:19:7",
															"nodeType": "YulAssignment",
															"src": "2919:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2930:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2930:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2935:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2935:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2926:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2926:3:7"
																},
																"nativeSrc": "2926:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2926:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2919:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2919:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2578:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2712:3:7",
														"nodeType": "YulTypedName",
														"src": "2712:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2720:3:7",
														"nodeType": "YulTypedName",
														"src": "2720:3:7",
														"type": ""
													}
												],
												"src": "2578:366:7"
											},
											{
												"body": {
													"nativeSrc": "3121:248:7",
													"nodeType": "YulBlock",
													"src": "3121:248:7",
													"statements": [
														{
															"nativeSrc": "3131:26:7",
															"nodeType": "YulAssignment",
															"src": "3131:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3143:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3143:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3154:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3154:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3139:3:7"
																},
																"nativeSrc": "3139:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3139:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3131:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3131:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3178:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3178:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3189:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3189:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3174:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3174:3:7"
																		},
																		"nativeSrc": "3174:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3174:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3197:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3197:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3203:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3203:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3193:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3193:3:7"
																		},
																		"nativeSrc": "3193:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3193:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3167:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3167:6:7"
																},
																"nativeSrc": "3167:47:7",
																"nodeType": "YulFunctionCall",
																"src": "3167:47:7"
															},
															"nativeSrc": "3167:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "3167:47:7"
														},
														{
															"nativeSrc": "3223:139:7",
															"nodeType": "YulAssignment",
															"src": "3223:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3357:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3357:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3231:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "3231:124:7"
																},
																"nativeSrc": "3231:131:7",
																"nodeType": "YulFunctionCall",
																"src": "3231:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3223:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3223:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2950:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3101:9:7",
														"nodeType": "YulTypedName",
														"src": "3101:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3116:4:7",
														"nodeType": "YulTypedName",
														"src": "3116:4:7",
														"type": ""
													}
												],
												"src": "2950:419:7"
											},
											{
												"body": {
													"nativeSrc": "3481:63:7",
													"nodeType": "YulBlock",
													"src": "3481:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3503:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3503:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3511:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3511:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3499:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:7"
																		},
																		"nativeSrc": "3499:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3499:14:7"
																	},
																	{
																		"hexValue": "496e76616c6964207265776172642072617465",
																		"kind": "string",
																		"nativeSrc": "3515:21:7",
																		"nodeType": "YulLiteral",
																		"src": "3515:21:7",
																		"type": "",
																		"value": "Invalid reward rate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3492:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3492:6:7"
																},
																"nativeSrc": "3492:45:7",
																"nodeType": "YulFunctionCall",
																"src": "3492:45:7"
															},
															"nativeSrc": "3492:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "3492:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_19c12d387005db191068f08c80e9280fdba4fa8902b3de3d392c34dbe7931e16",
												"nativeSrc": "3375:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3473:6:7",
														"nodeType": "YulTypedName",
														"src": "3473:6:7",
														"type": ""
													}
												],
												"src": "3375:169:7"
											},
											{
												"body": {
													"nativeSrc": "3696:220:7",
													"nodeType": "YulBlock",
													"src": "3696:220:7",
													"statements": [
														{
															"nativeSrc": "3706:74:7",
															"nodeType": "YulAssignment",
															"src": "3706:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3772:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3772:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3777:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3777:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3713:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "3713:58:7"
																},
																"nativeSrc": "3713:67:7",
																"nodeType": "YulFunctionCall",
																"src": "3713:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3706:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3706:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3878:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3878:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_19c12d387005db191068f08c80e9280fdba4fa8902b3de3d392c34dbe7931e16",
																	"nativeSrc": "3789:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "3789:88:7"
																},
																"nativeSrc": "3789:93:7",
																"nodeType": "YulFunctionCall",
																"src": "3789:93:7"
															},
															"nativeSrc": "3789:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "3789:93:7"
														},
														{
															"nativeSrc": "3891:19:7",
															"nodeType": "YulAssignment",
															"src": "3891:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3902:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3902:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3907:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3907:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3898:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:7"
																},
																"nativeSrc": "3898:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3898:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3891:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3891:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_19c12d387005db191068f08c80e9280fdba4fa8902b3de3d392c34dbe7931e16_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3550:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3684:3:7",
														"nodeType": "YulTypedName",
														"src": "3684:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3692:3:7",
														"nodeType": "YulTypedName",
														"src": "3692:3:7",
														"type": ""
													}
												],
												"src": "3550:366:7"
											},
											{
												"body": {
													"nativeSrc": "4093:248:7",
													"nodeType": "YulBlock",
													"src": "4093:248:7",
													"statements": [
														{
															"nativeSrc": "4103:26:7",
															"nodeType": "YulAssignment",
															"src": "4103:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4115:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4115:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4126:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4126:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4111:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4111:3:7"
																},
																"nativeSrc": "4111:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4111:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4103:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4103:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4150:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4150:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4161:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4161:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4146:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4146:3:7"
																		},
																		"nativeSrc": "4146:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4146:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4169:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4169:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4175:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4175:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4165:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4165:3:7"
																		},
																		"nativeSrc": "4165:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4165:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4139:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4139:6:7"
																},
																"nativeSrc": "4139:47:7",
																"nodeType": "YulFunctionCall",
																"src": "4139:47:7"
															},
															"nativeSrc": "4139:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "4139:47:7"
														},
														{
															"nativeSrc": "4195:139:7",
															"nodeType": "YulAssignment",
															"src": "4195:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4329:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4329:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_19c12d387005db191068f08c80e9280fdba4fa8902b3de3d392c34dbe7931e16_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4203:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "4203:124:7"
																},
																"nativeSrc": "4203:131:7",
																"nodeType": "YulFunctionCall",
																"src": "4203:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4195:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4195:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_19c12d387005db191068f08c80e9280fdba4fa8902b3de3d392c34dbe7931e16__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3922:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4073:9:7",
														"nodeType": "YulTypedName",
														"src": "4073:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4088:4:7",
														"nodeType": "YulTypedName",
														"src": "4088:4:7",
														"type": ""
													}
												],
												"src": "3922:419:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_19c12d387005db191068f08c80e9280fdba4fa8902b3de3d392c34dbe7931e16(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid reward rate\")\n\n    }\n\n    function abi_encode_t_stringliteral_19c12d387005db191068f08c80e9280fdba4fa8902b3de3d392c34dbe7931e16_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_19c12d387005db191068f08c80e9280fdba4fa8902b3de3d392c34dbe7931e16(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_19c12d387005db191068f08c80e9280fdba4fa8902b3de3d392c34dbe7931e16__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_19c12d387005db191068f08c80e9280fdba4fa8902b3de3d392c34dbe7931e16_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516112dd3803806112dd83398181016040528101906100319190610303565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100999190610362565b60405180910390fd5b6100b1816101b160201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610120576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610117906103d5565b60405180910390fd5b5f8211610162576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101599061043d565b60405180910390fd5b8260015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160028190555050505061045b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61029f82610276565b9050919050565b6102af81610295565b81146102b9575f80fd5b50565b5f815190506102ca816102a6565b92915050565b5f819050919050565b6102e2816102d0565b81146102ec575f80fd5b50565b5f815190506102fd816102d9565b92915050565b5f805f6060848603121561031a57610319610272565b5b5f610327868287016102bc565b9350506020610338868287016102ef565b9250506040610349868287016102bc565b9150509250925092565b61035c81610295565b82525050565b5f6020820190506103755f830184610353565b92915050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f6103bf60158361037b565b91506103ca8261038b565b602082019050919050565b5f6020820190508181035f8301526103ec816103b3565b9050919050565b7f496e76616c6964207265776172642072617465000000000000000000000000005f82015250565b5f61042760138361037b565b9150610432826103f3565b602082019050919050565b5f6020820190508181035f8301526104548161041b565b9050919050565b610e75806104685f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c80638da5cb5b116100645780638da5cb5b146101465780639087049214610164578063a694fc3a14610182578063d82e39621461019e578063f2fde38b146101ce5761009c565b806316934fc4146100a05780632e17de78146100d257806331d7a262146100ee578063715018a61461011e57806372f702f314610128575b5f80fd5b6100ba60048036038101906100b591906109c9565b6101ea565b6040516100c993929190610a0c565b60405180910390f35b6100ec60048036038101906100e79190610a6b565b610210565b005b610108600480360381019061010391906109c9565b610479565b6040516101159190610a96565b60405180910390f35b6101266104df565b005b6101306104f2565b60405161013d9190610b0a565b60405180910390f35b61014e610517565b60405161015b9190610b32565b60405180910390f35b61016c61053e565b6040516101799190610a96565b60405180910390f35b61019c60048036038101906101979190610a6b565b610544565b005b6101b860048036038101906101b391906109c9565b61070c565b6040516101c59190610a96565b60405180910390f35b6101e860048036038101906101e391906109c9565b610798565b005b6003602052805f5260405f205f91509050805f0154908060010154908060020154905083565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905081815f01541015610296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028d90610ba5565b60405180910390fd5b5f6102a03361070c565b90505f8260010154826102b39190610bf0565b905083835f015f8282546102c79190610c23565b925050819055505f836001018190555043836002018190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b815260040161033c929190610c56565b6020604051808303815f875af1158015610358573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061037c9190610cb2565b505f8111156104235760015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103e1929190610c56565b6020604051808303815f875af11580156103fd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104219190610cb2565b505b3373ffffffffffffffffffffffffffffffffffffffff167f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e858360405161046b929190610cdd565b60405180910390a250505050565b5f8060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f6104c48461070c565b90508160010154816104d69190610bf0565b92505050919050565b6104e761081c565b6104f05f6108a3565b565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b5f8111610586576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057d90610d4e565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015411156105f9575f6105db3361070c565b905080826001015f8282546105f09190610bf0565b92505081905550505b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161065793929190610d6c565b6020604051808303815f875af1158015610673573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106979190610cb2565b5081815f015f8282546106aa9190610bf0565b925050819055504381600201819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d836040516107009190610a96565b60405180910390a25050565b5f8060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f81600201544361075e9190610c23565b9050670de0b6b3a764000081600254845f015461077b9190610da1565b6107859190610da1565b61078f9190610e0f565b92505050919050565b6107a061081c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610810575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108079190610b32565b60405180910390fd5b610819816108a3565b50565b610824610964565b73ffffffffffffffffffffffffffffffffffffffff16610842610517565b73ffffffffffffffffffffffffffffffffffffffff16146108a157610865610964565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108989190610b32565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109988261096f565b9050919050565b6109a88161098e565b81146109b2575f80fd5b50565b5f813590506109c38161099f565b92915050565b5f602082840312156109de576109dd61096b565b5b5f6109eb848285016109b5565b91505092915050565b5f819050919050565b610a06816109f4565b82525050565b5f606082019050610a1f5f8301866109fd565b610a2c60208301856109fd565b610a3960408301846109fd565b949350505050565b610a4a816109f4565b8114610a54575f80fd5b50565b5f81359050610a6581610a41565b92915050565b5f60208284031215610a8057610a7f61096b565b5b5f610a8d84828501610a57565b91505092915050565b5f602082019050610aa95f8301846109fd565b92915050565b5f819050919050565b5f610ad2610acd610ac88461096f565b610aaf565b61096f565b9050919050565b5f610ae382610ab8565b9050919050565b5f610af482610ad9565b9050919050565b610b0481610aea565b82525050565b5f602082019050610b1d5f830184610afb565b92915050565b610b2c8161098e565b82525050565b5f602082019050610b455f830184610b23565b92915050565b5f82825260208201905092915050565b7f4e6f7420656e6f756768207374616b65640000000000000000000000000000005f82015250565b5f610b8f601183610b4b565b9150610b9a82610b5b565b602082019050919050565b5f6020820190508181035f830152610bbc81610b83565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610bfa826109f4565b9150610c05836109f4565b9250828201905080821115610c1d57610c1c610bc3565b5b92915050565b5f610c2d826109f4565b9150610c38836109f4565b9250828203905081811115610c5057610c4f610bc3565b5b92915050565b5f604082019050610c695f830185610b23565b610c7660208301846109fd565b9392505050565b5f8115159050919050565b610c9181610c7d565b8114610c9b575f80fd5b50565b5f81519050610cac81610c88565b92915050565b5f60208284031215610cc757610cc661096b565b5b5f610cd484828501610c9e565b91505092915050565b5f604082019050610cf05f8301856109fd565b610cfd60208301846109fd565b9392505050565b7f43616e6e6f74207374616b65203020746f6b656e7300000000000000000000005f82015250565b5f610d38601583610b4b565b9150610d4382610d04565b602082019050919050565b5f6020820190508181035f830152610d6581610d2c565b9050919050565b5f606082019050610d7f5f830186610b23565b610d8c6020830185610b23565b610d9960408301846109fd565b949350505050565b5f610dab826109f4565b9150610db6836109f4565b9250828202610dc4816109f4565b91508282048414831517610ddb57610dda610bc3565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610e19826109f4565b9150610e24836109f4565b925082610e3457610e33610de2565b5b82820490509291505056fea26469706673582212204ee478acf463d175d6e232d63b558849deb7c5a6c8f24726edccfe3ad133ecb064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x12DD CODESIZE SUB DUP1 PUSH2 0x12DD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x303 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x1B1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x120 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117 SWAP1 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x162 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159 SWAP1 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x45B JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29F DUP3 PUSH2 0x276 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AF DUP2 PUSH2 0x295 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CA DUP2 PUSH2 0x2A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E2 DUP2 PUSH2 0x2D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2FD DUP2 PUSH2 0x2D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x31A JUMPI PUSH2 0x319 PUSH2 0x272 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x327 DUP7 DUP3 DUP8 ADD PUSH2 0x2BC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x338 DUP7 DUP3 DUP8 ADD PUSH2 0x2EF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x349 DUP7 DUP3 DUP8 ADD PUSH2 0x2BC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x35C DUP2 PUSH2 0x295 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x375 PUSH0 DUP4 ADD DUP5 PUSH2 0x353 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3BF PUSH1 0x15 DUP4 PUSH2 0x37B JUMP JUMPDEST SWAP2 POP PUSH2 0x3CA DUP3 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3EC DUP2 PUSH2 0x3B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726577617264207261746500000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x427 PUSH1 0x13 DUP4 PUSH2 0x37B JUMP JUMPDEST SWAP2 POP PUSH2 0x432 DUP3 PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x454 DUP2 PUSH2 0x41B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE75 DUP1 PUSH2 0x468 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x90870492 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1CE JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x31D7A262 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x128 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x210 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x4DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x130 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH2 0x517 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH2 0x53E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x544 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28D SWAP1 PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2A0 CALLER PUSH2 0x70C JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0xBF0 JUMP JUMPDEST SWAP1 POP DUP4 DUP4 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0xC23 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33C SWAP3 SWAP2 SWAP1 PUSH2 0xC56 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x358 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST POP PUSH0 DUP2 GT ISZERO PUSH2 0x423 JUMPI PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E1 SWAP3 SWAP2 SWAP1 PUSH2 0xC56 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3FD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x421 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x46B SWAP3 SWAP2 SWAP1 PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH2 0x4C4 DUP5 PUSH2 0x70C JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD DUP2 PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0xBF0 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E7 PUSH2 0x81C JUMP JUMPDEST PUSH2 0x4F0 PUSH0 PUSH2 0x8A3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57D SWAP1 PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x5F9 JUMPI PUSH0 PUSH2 0x5DB CALLER PUSH2 0x70C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5F0 SWAP2 SWAP1 PUSH2 0xBF0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x657 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x673 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x697 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST POP DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0xBF0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP NUMBER DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP4 PUSH1 0x40 MLOAD PUSH2 0x700 SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x75E SWAP2 SWAP1 PUSH2 0xC23 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH1 0x2 SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x77B SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH2 0x785 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH2 0x78F SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A0 PUSH2 0x81C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x810 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x807 SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x819 DUP2 PUSH2 0x8A3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x824 PUSH2 0x964 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x842 PUSH2 0x517 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A1 JUMPI PUSH2 0x865 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x898 SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x998 DUP3 PUSH2 0x96F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A8 DUP2 PUSH2 0x98E JUMP JUMPDEST DUP2 EQ PUSH2 0x9B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9C3 DUP2 PUSH2 0x99F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DE JUMPI PUSH2 0x9DD PUSH2 0x96B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9EB DUP5 DUP3 DUP6 ADD PUSH2 0x9B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA06 DUP2 PUSH2 0x9F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA1F PUSH0 DUP4 ADD DUP7 PUSH2 0x9FD JUMP JUMPDEST PUSH2 0xA2C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9FD JUMP JUMPDEST PUSH2 0xA39 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9FD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xA4A DUP2 PUSH2 0x9F4 JUMP JUMPDEST DUP2 EQ PUSH2 0xA54 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA65 DUP2 PUSH2 0xA41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA80 JUMPI PUSH2 0xA7F PUSH2 0x96B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA8D DUP5 DUP3 DUP6 ADD PUSH2 0xA57 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA9 PUSH0 DUP4 ADD DUP5 PUSH2 0x9FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAD2 PUSH2 0xACD PUSH2 0xAC8 DUP5 PUSH2 0x96F JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAE3 DUP3 PUSH2 0xAB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAF4 DUP3 PUSH2 0xAD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB04 DUP2 PUSH2 0xAEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB1D PUSH0 DUP4 ADD DUP5 PUSH2 0xAFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB2C DUP2 PUSH2 0x98E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB45 PUSH0 DUP4 ADD DUP5 PUSH2 0xB23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768207374616B6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB8F PUSH1 0x11 DUP4 PUSH2 0xB4B JUMP JUMPDEST SWAP2 POP PUSH2 0xB9A DUP3 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBBC DUP2 PUSH2 0xB83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xBFA DUP3 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xC05 DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC1D JUMPI PUSH2 0xC1C PUSH2 0xBC3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC2D DUP3 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xC38 DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC50 JUMPI PUSH2 0xC4F PUSH2 0xBC3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC69 PUSH0 DUP4 ADD DUP6 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xC76 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC91 DUP2 PUSH2 0xC7D JUMP JUMPDEST DUP2 EQ PUSH2 0xC9B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCAC DUP2 PUSH2 0xC88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC7 JUMPI PUSH2 0xCC6 PUSH2 0x96B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCD4 DUP5 DUP3 DUP6 ADD PUSH2 0xC9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCF0 PUSH0 DUP4 ADD DUP6 PUSH2 0x9FD JUMP JUMPDEST PUSH2 0xCFD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B65203020746F6B656E730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD38 PUSH1 0x15 DUP4 PUSH2 0xB4B JUMP JUMPDEST SWAP2 POP PUSH2 0xD43 DUP3 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD65 DUP2 PUSH2 0xD2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD7F PUSH0 DUP4 ADD DUP7 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xD8C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xD99 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9FD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDAB DUP3 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xDB6 DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xDC4 DUP2 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xDDB JUMPI PUSH2 0xDDA PUSH2 0xBC3 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE19 DUP3 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xE24 DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE34 JUMPI PUSH2 0xE33 PUSH2 0xDE2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xE4 PUSH25 0xACF463D175D6E232D63B558849DEB7C5A6C8F24726EDCCFE3A 0xD1 CALLER 0xEC 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "236:3160:6:-:0;;;1047:354;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1141:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1199:1:6::1;1174:27;;:13;:27;;::::0;1166:61:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1268:1;1246:19;:23;1238:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1328:13;1306:12;;:36;;;;;;;;;;;;;;;;;;1374:19;1353:18;:40;;;;1047:354:::0;;;236:3160;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;1874:118::-;1961:24;1979:5;1961:24;:::i;:::-;1956:3;1949:37;1874:118;;:::o;1998:222::-;2091:4;2129:2;2118:9;2114:18;2106:26;;2142:71;2210:1;2199:9;2195:17;2186:6;2142:71;:::i;:::-;1998:222;;;;:::o;2226:169::-;2310:11;2344:6;2339:3;2332:19;2384:4;2379:3;2375:14;2360:29;;2226:169;;;;:::o;2401:171::-;2541:23;2537:1;2529:6;2525:14;2518:47;2401:171;:::o;2578:366::-;2720:3;2741:67;2805:2;2800:3;2741:67;:::i;:::-;2734:74;;2817:93;2906:3;2817:93;:::i;:::-;2935:2;2930:3;2926:12;2919:19;;2578:366;;;:::o;2950:419::-;3116:4;3154:2;3143:9;3139:18;3131:26;;3203:9;3197:4;3193:20;3189:1;3178:9;3174:17;3167:47;3231:131;3357:4;3231:131;:::i;:::-;3223:139;;2950:419;;;:::o;3375:169::-;3515:21;3511:1;3503:6;3499:14;3492:45;3375:169;:::o;3550:366::-;3692:3;3713:67;3777:2;3772:3;3713:67;:::i;:::-;3706:74;;3789:93;3878:3;3789:93;:::i;:::-;3907:2;3902:3;3898:12;3891:19;;3550:366;;;:::o;3922:419::-;4088:4;4126:2;4115:9;4111:18;4103:26;;4175:9;4169:4;4165:20;4161:1;4150:9;4146:17;4139:47;4203:131;4329:4;4203:131;:::i;:::-;4195:139;;3922:419;;;:::o;236:3160:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 2076,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 2404,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2211,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateReward_1201": {
									"entryPoint": 1804,
									"id": 1201,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1303,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingRewards_1228": {
									"entryPoint": 1145,
									"id": 1228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1247,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardRatePerBlock_944": {
									"entryPoint": 1342,
									"id": 944,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_1083": {
									"entryPoint": 1348,
									"id": 1083,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakes_956": {
									"entryPoint": 490,
									"id": 956,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingToken_942": {
									"entryPoint": 1266,
									"id": 942,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1944,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_1167": {
									"entryPoint": 528,
									"id": 1167,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack": {
									"entryPoint": 2811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3436,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3158,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed": {
									"entryPoint": 2826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3293,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2572,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$877_to_t_address": {
									"entryPoint": 2794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3011,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3554,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2411,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76": {
									"entryPoint": 2907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b": {
									"entryPoint": 3332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9260:7",
										"nodeType": "YulBlock",
										"src": "0:9260:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "748:87:7",
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nativeSrc": "758:29:7",
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nativeSrc": "767:20:7",
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nativeSrc": "796:33:7",
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nativeSrc": "796:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:7",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:7",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:7",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nativeSrc": "907:263:7",
													"nodeType": "YulBlock",
													"src": "907:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:7",
																"nodeType": "YulBlock",
																"src": "953:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:7"
																			},
																			"nativeSrc": "955:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:7"
																		},
																		"nativeSrc": "955:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:7"
																		},
																		"nativeSrc": "924:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:7",
																		"nodeType": "YulLiteral",
																		"src": "949:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:7"
																},
																"nativeSrc": "920:32:7",
																"nodeType": "YulFunctionCall",
																"src": "920:32:7"
															},
															"nativeSrc": "917:119:7",
															"nodeType": "YulIf",
															"src": "917:119:7"
														},
														{
															"nativeSrc": "1046:117:7",
															"nodeType": "YulBlock",
															"src": "1046:117:7",
															"statements": [
																{
																	"nativeSrc": "1061:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:7"
																				},
																				"nativeSrc": "1121:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:7"
																		},
																		"nativeSrc": "1100:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:7",
														"nodeType": "YulTypedName",
														"src": "877:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:7",
														"nodeType": "YulTypedName",
														"src": "888:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:7",
														"nodeType": "YulTypedName",
														"src": "900:6:7",
														"type": ""
													}
												],
												"src": "841:329:7"
											},
											{
												"body": {
													"nativeSrc": "1221:32:7",
													"nodeType": "YulBlock",
													"src": "1221:32:7",
													"statements": [
														{
															"nativeSrc": "1231:16:7",
															"nodeType": "YulAssignment",
															"src": "1231:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:7",
																"nodeType": "YulIdentifier",
																"src": "1242:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:7",
														"nodeType": "YulTypedName",
														"src": "1203:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:7",
														"nodeType": "YulTypedName",
														"src": "1213:7:7",
														"type": ""
													}
												],
												"src": "1176:77:7"
											},
											{
												"body": {
													"nativeSrc": "1324:53:7",
													"nodeType": "YulBlock",
													"src": "1324:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:7"
																		},
																		"nativeSrc": "1346:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:7"
																},
																"nativeSrc": "1334:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:7"
															},
															"nativeSrc": "1334:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:7",
														"nodeType": "YulTypedName",
														"src": "1312:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:7",
														"nodeType": "YulTypedName",
														"src": "1319:3:7",
														"type": ""
													}
												],
												"src": "1259:118:7"
											},
											{
												"body": {
													"nativeSrc": "1537:288:7",
													"nodeType": "YulBlock",
													"src": "1537:288:7",
													"statements": [
														{
															"nativeSrc": "1547:26:7",
															"nodeType": "YulAssignment",
															"src": "1547:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1559:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1559:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1570:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1570:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1555:3:7"
																},
																"nativeSrc": "1555:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1555:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1547:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1547:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1627:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1627:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1640:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1651:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1651:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1636:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:7"
																		},
																		"nativeSrc": "1636:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1583:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1583:43:7"
																},
																"nativeSrc": "1583:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1583:71:7"
															},
															"nativeSrc": "1583:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1583:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1708:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1708:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1721:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1721:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1732:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1732:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1717:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1717:3:7"
																		},
																		"nativeSrc": "1717:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1717:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1664:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1664:43:7"
																},
																"nativeSrc": "1664:72:7",
																"nodeType": "YulFunctionCall",
																"src": "1664:72:7"
															},
															"nativeSrc": "1664:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "1664:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "1790:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1803:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1803:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1814:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1814:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1799:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:7"
																		},
																		"nativeSrc": "1799:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1746:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1746:43:7"
																},
																"nativeSrc": "1746:72:7",
																"nodeType": "YulFunctionCall",
																"src": "1746:72:7"
															},
															"nativeSrc": "1746:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "1746:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1493:9:7",
														"nodeType": "YulTypedName",
														"src": "1493:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1505:6:7",
														"nodeType": "YulTypedName",
														"src": "1505:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1513:6:7",
														"nodeType": "YulTypedName",
														"src": "1513:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1521:6:7",
														"nodeType": "YulTypedName",
														"src": "1521:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1532:4:7",
														"nodeType": "YulTypedName",
														"src": "1532:4:7",
														"type": ""
													}
												],
												"src": "1383:442:7"
											},
											{
												"body": {
													"nativeSrc": "1874:79:7",
													"nodeType": "YulBlock",
													"src": "1874:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1931:16:7",
																"nodeType": "YulBlock",
																"src": "1931:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1940:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1943:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1943:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1933:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1933:6:7"
																			},
																			"nativeSrc": "1933:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1933:12:7"
																		},
																		"nativeSrc": "1933:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1933:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1897:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1897:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1922:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1922:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1904:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1904:17:7"
																				},
																				"nativeSrc": "1904:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1904:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1894:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1894:2:7"
																		},
																		"nativeSrc": "1894:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1894:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1887:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1887:6:7"
																},
																"nativeSrc": "1887:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1887:43:7"
															},
															"nativeSrc": "1884:63:7",
															"nodeType": "YulIf",
															"src": "1884:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1831:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1867:5:7",
														"nodeType": "YulTypedName",
														"src": "1867:5:7",
														"type": ""
													}
												],
												"src": "1831:122:7"
											},
											{
												"body": {
													"nativeSrc": "2011:87:7",
													"nodeType": "YulBlock",
													"src": "2011:87:7",
													"statements": [
														{
															"nativeSrc": "2021:29:7",
															"nodeType": "YulAssignment",
															"src": "2021:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2043:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2043:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2030:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2030:12:7"
																},
																"nativeSrc": "2030:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2030:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2021:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2021:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2086:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2086:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2059:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2059:26:7"
																},
																"nativeSrc": "2059:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2059:33:7"
															},
															"nativeSrc": "2059:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2059:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1959:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1989:6:7",
														"nodeType": "YulTypedName",
														"src": "1989:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1997:3:7",
														"nodeType": "YulTypedName",
														"src": "1997:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2005:5:7",
														"nodeType": "YulTypedName",
														"src": "2005:5:7",
														"type": ""
													}
												],
												"src": "1959:139:7"
											},
											{
												"body": {
													"nativeSrc": "2170:263:7",
													"nodeType": "YulBlock",
													"src": "2170:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2216:83:7",
																"nodeType": "YulBlock",
																"src": "2216:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2218:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2218:77:7"
																			},
																			"nativeSrc": "2218:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2218:79:7"
																		},
																		"nativeSrc": "2218:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2218:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2191:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2191:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2200:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2200:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2187:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2187:3:7"
																		},
																		"nativeSrc": "2187:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2187:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2212:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2212:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2183:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2183:3:7"
																},
																"nativeSrc": "2183:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2183:32:7"
															},
															"nativeSrc": "2180:119:7",
															"nodeType": "YulIf",
															"src": "2180:119:7"
														},
														{
															"nativeSrc": "2309:117:7",
															"nodeType": "YulBlock",
															"src": "2309:117:7",
															"statements": [
																{
																	"nativeSrc": "2324:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2324:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2338:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2338:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2328:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2328:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2353:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2353:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2388:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2388:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2399:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2399:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2384:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2384:3:7"
																				},
																				"nativeSrc": "2384:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2384:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2408:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2408:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2363:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2363:20:7"
																		},
																		"nativeSrc": "2363:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2363:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2353:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2353:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2104:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2140:9:7",
														"nodeType": "YulTypedName",
														"src": "2140:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2151:7:7",
														"nodeType": "YulTypedName",
														"src": "2151:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2163:6:7",
														"nodeType": "YulTypedName",
														"src": "2163:6:7",
														"type": ""
													}
												],
												"src": "2104:329:7"
											},
											{
												"body": {
													"nativeSrc": "2537:124:7",
													"nodeType": "YulBlock",
													"src": "2537:124:7",
													"statements": [
														{
															"nativeSrc": "2547:26:7",
															"nodeType": "YulAssignment",
															"src": "2547:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2559:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2559:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2570:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2570:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2555:3:7"
																},
																"nativeSrc": "2555:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2555:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2547:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2547:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2627:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2627:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2640:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2640:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2651:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2651:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2636:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2636:3:7"
																		},
																		"nativeSrc": "2636:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2636:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2583:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2583:43:7"
																},
																"nativeSrc": "2583:71:7",
																"nodeType": "YulFunctionCall",
																"src": "2583:71:7"
															},
															"nativeSrc": "2583:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "2583:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2439:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2509:9:7",
														"nodeType": "YulTypedName",
														"src": "2509:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2521:6:7",
														"nodeType": "YulTypedName",
														"src": "2521:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2532:4:7",
														"nodeType": "YulTypedName",
														"src": "2532:4:7",
														"type": ""
													}
												],
												"src": "2439:222:7"
											},
											{
												"body": {
													"nativeSrc": "2699:28:7",
													"nodeType": "YulBlock",
													"src": "2699:28:7",
													"statements": [
														{
															"nativeSrc": "2709:12:7",
															"nodeType": "YulAssignment",
															"src": "2709:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "2716:5:7",
																"nodeType": "YulIdentifier",
																"src": "2716:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2709:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2709:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2667:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2685:5:7",
														"nodeType": "YulTypedName",
														"src": "2685:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2695:3:7",
														"nodeType": "YulTypedName",
														"src": "2695:3:7",
														"type": ""
													}
												],
												"src": "2667:60:7"
											},
											{
												"body": {
													"nativeSrc": "2793:82:7",
													"nodeType": "YulBlock",
													"src": "2793:82:7",
													"statements": [
														{
															"nativeSrc": "2803:66:7",
															"nodeType": "YulAssignment",
															"src": "2803:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2861:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2843:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2843:17:7"
																				},
																				"nativeSrc": "2843:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2843:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2834:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "2834:8:7"
																		},
																		"nativeSrc": "2834:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2834:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2816:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2816:17:7"
																},
																"nativeSrc": "2816:53:7",
																"nodeType": "YulFunctionCall",
																"src": "2816:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2803:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2803:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2733:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2773:5:7",
														"nodeType": "YulTypedName",
														"src": "2773:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2783:9:7",
														"nodeType": "YulTypedName",
														"src": "2783:9:7",
														"type": ""
													}
												],
												"src": "2733:142:7"
											},
											{
												"body": {
													"nativeSrc": "2941:66:7",
													"nodeType": "YulBlock",
													"src": "2941:66:7",
													"statements": [
														{
															"nativeSrc": "2951:50:7",
															"nodeType": "YulAssignment",
															"src": "2951:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2995:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2995:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2964:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:30:7"
																},
																"nativeSrc": "2964:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2964:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2951:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2951:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2881:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2921:5:7",
														"nodeType": "YulTypedName",
														"src": "2921:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2931:9:7",
														"nodeType": "YulTypedName",
														"src": "2931:9:7",
														"type": ""
													}
												],
												"src": "2881:126:7"
											},
											{
												"body": {
													"nativeSrc": "3087:66:7",
													"nodeType": "YulBlock",
													"src": "3087:66:7",
													"statements": [
														{
															"nativeSrc": "3097:50:7",
															"nodeType": "YulAssignment",
															"src": "3097:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3141:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3141:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3110:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3110:30:7"
																},
																"nativeSrc": "3110:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3110:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3097:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3097:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$877_to_t_address",
												"nativeSrc": "3013:140:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3067:5:7",
														"nodeType": "YulTypedName",
														"src": "3067:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3077:9:7",
														"nodeType": "YulTypedName",
														"src": "3077:9:7",
														"type": ""
													}
												],
												"src": "3013:140:7"
											},
											{
												"body": {
													"nativeSrc": "3238:80:7",
													"nodeType": "YulBlock",
													"src": "3238:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3255:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3255:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3305:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3305:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$877_to_t_address",
																			"nativeSrc": "3260:44:7",
																			"nodeType": "YulIdentifier",
																			"src": "3260:44:7"
																		},
																		"nativeSrc": "3260:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3260:51:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3248:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3248:6:7"
																},
																"nativeSrc": "3248:64:7",
																"nodeType": "YulFunctionCall",
																"src": "3248:64:7"
															},
															"nativeSrc": "3248:64:7",
															"nodeType": "YulExpressionStatement",
															"src": "3248:64:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack",
												"nativeSrc": "3159:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3226:5:7",
														"nodeType": "YulTypedName",
														"src": "3226:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3233:3:7",
														"nodeType": "YulTypedName",
														"src": "3233:3:7",
														"type": ""
													}
												],
												"src": "3159:159:7"
											},
											{
												"body": {
													"nativeSrc": "3436:138:7",
													"nodeType": "YulBlock",
													"src": "3436:138:7",
													"statements": [
														{
															"nativeSrc": "3446:26:7",
															"nodeType": "YulAssignment",
															"src": "3446:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3458:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3458:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3469:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3469:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3454:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3454:3:7"
																},
																"nativeSrc": "3454:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3454:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3446:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3446:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3540:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3540:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3553:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3553:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3564:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3564:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3549:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3549:3:7"
																		},
																		"nativeSrc": "3549:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3549:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack",
																	"nativeSrc": "3482:57:7",
																	"nodeType": "YulIdentifier",
																	"src": "3482:57:7"
																},
																"nativeSrc": "3482:85:7",
																"nodeType": "YulFunctionCall",
																"src": "3482:85:7"
															},
															"nativeSrc": "3482:85:7",
															"nodeType": "YulExpressionStatement",
															"src": "3482:85:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed",
												"nativeSrc": "3324:250:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3408:9:7",
														"nodeType": "YulTypedName",
														"src": "3408:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3420:6:7",
														"nodeType": "YulTypedName",
														"src": "3420:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3431:4:7",
														"nodeType": "YulTypedName",
														"src": "3431:4:7",
														"type": ""
													}
												],
												"src": "3324:250:7"
											},
											{
												"body": {
													"nativeSrc": "3645:53:7",
													"nodeType": "YulBlock",
													"src": "3645:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3662:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3662:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3685:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3685:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3667:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3667:17:7"
																		},
																		"nativeSrc": "3667:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3667:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3655:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3655:6:7"
																},
																"nativeSrc": "3655:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3655:37:7"
															},
															"nativeSrc": "3655:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3655:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3580:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3633:5:7",
														"nodeType": "YulTypedName",
														"src": "3633:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3640:3:7",
														"nodeType": "YulTypedName",
														"src": "3640:3:7",
														"type": ""
													}
												],
												"src": "3580:118:7"
											},
											{
												"body": {
													"nativeSrc": "3802:124:7",
													"nodeType": "YulBlock",
													"src": "3802:124:7",
													"statements": [
														{
															"nativeSrc": "3812:26:7",
															"nodeType": "YulAssignment",
															"src": "3812:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3824:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3824:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3835:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3835:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3820:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3820:3:7"
																},
																"nativeSrc": "3820:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3820:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3812:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3812:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3892:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3892:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3905:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3905:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3916:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3916:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3901:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3901:3:7"
																		},
																		"nativeSrc": "3901:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3901:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3848:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3848:43:7"
																},
																"nativeSrc": "3848:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3848:71:7"
															},
															"nativeSrc": "3848:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3848:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3704:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3774:9:7",
														"nodeType": "YulTypedName",
														"src": "3774:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3786:6:7",
														"nodeType": "YulTypedName",
														"src": "3786:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3797:4:7",
														"nodeType": "YulTypedName",
														"src": "3797:4:7",
														"type": ""
													}
												],
												"src": "3704:222:7"
											},
											{
												"body": {
													"nativeSrc": "4028:73:7",
													"nodeType": "YulBlock",
													"src": "4028:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4045:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4045:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4050:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4050:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4038:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4038:6:7"
																},
																"nativeSrc": "4038:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4038:19:7"
															},
															"nativeSrc": "4038:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "4038:19:7"
														},
														{
															"nativeSrc": "4066:29:7",
															"nodeType": "YulAssignment",
															"src": "4066:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4085:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4085:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4090:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4090:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4081:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4081:3:7"
																},
																"nativeSrc": "4081:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4081:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4066:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "4066:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3932:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4000:3:7",
														"nodeType": "YulTypedName",
														"src": "4000:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4005:6:7",
														"nodeType": "YulTypedName",
														"src": "4005:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4016:11:7",
														"nodeType": "YulTypedName",
														"src": "4016:11:7",
														"type": ""
													}
												],
												"src": "3932:169:7"
											},
											{
												"body": {
													"nativeSrc": "4213:61:7",
													"nodeType": "YulBlock",
													"src": "4213:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4235:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4235:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4243:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4243:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4231:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4231:3:7"
																		},
																		"nativeSrc": "4231:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4231:14:7"
																	},
																	{
																		"hexValue": "4e6f7420656e6f756768207374616b6564",
																		"kind": "string",
																		"nativeSrc": "4247:19:7",
																		"nodeType": "YulLiteral",
																		"src": "4247:19:7",
																		"type": "",
																		"value": "Not enough staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4224:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4224:6:7"
																},
																"nativeSrc": "4224:43:7",
																"nodeType": "YulFunctionCall",
																"src": "4224:43:7"
															},
															"nativeSrc": "4224:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "4224:43:7"
														}
													]
												},
												"name": "store_literal_in_memory_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76",
												"nativeSrc": "4107:167:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4205:6:7",
														"nodeType": "YulTypedName",
														"src": "4205:6:7",
														"type": ""
													}
												],
												"src": "4107:167:7"
											},
											{
												"body": {
													"nativeSrc": "4426:220:7",
													"nodeType": "YulBlock",
													"src": "4426:220:7",
													"statements": [
														{
															"nativeSrc": "4436:74:7",
															"nodeType": "YulAssignment",
															"src": "4436:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4502:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4502:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4507:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4507:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4443:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "4443:58:7"
																},
																"nativeSrc": "4443:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4443:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4436:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4436:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4608:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4608:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76",
																	"nativeSrc": "4519:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "4519:88:7"
																},
																"nativeSrc": "4519:93:7",
																"nodeType": "YulFunctionCall",
																"src": "4519:93:7"
															},
															"nativeSrc": "4519:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "4519:93:7"
														},
														{
															"nativeSrc": "4621:19:7",
															"nodeType": "YulAssignment",
															"src": "4621:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4632:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4632:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4637:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4637:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4628:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4628:3:7"
																},
																"nativeSrc": "4628:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4628:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4621:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4621:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4280:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4414:3:7",
														"nodeType": "YulTypedName",
														"src": "4414:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4422:3:7",
														"nodeType": "YulTypedName",
														"src": "4422:3:7",
														"type": ""
													}
												],
												"src": "4280:366:7"
											},
											{
												"body": {
													"nativeSrc": "4823:248:7",
													"nodeType": "YulBlock",
													"src": "4823:248:7",
													"statements": [
														{
															"nativeSrc": "4833:26:7",
															"nodeType": "YulAssignment",
															"src": "4833:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4845:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4845:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4856:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4856:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4841:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4841:3:7"
																},
																"nativeSrc": "4841:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4841:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4833:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4833:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4880:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4880:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4891:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4891:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4876:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4876:3:7"
																		},
																		"nativeSrc": "4876:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4876:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4899:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4899:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4905:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4905:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4895:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4895:3:7"
																		},
																		"nativeSrc": "4895:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4895:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4869:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4869:6:7"
																},
																"nativeSrc": "4869:47:7",
																"nodeType": "YulFunctionCall",
																"src": "4869:47:7"
															},
															"nativeSrc": "4869:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "4869:47:7"
														},
														{
															"nativeSrc": "4925:139:7",
															"nodeType": "YulAssignment",
															"src": "4925:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5059:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5059:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4933:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "4933:124:7"
																},
																"nativeSrc": "4933:131:7",
																"nodeType": "YulFunctionCall",
																"src": "4933:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4925:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4925:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4652:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4803:9:7",
														"nodeType": "YulTypedName",
														"src": "4803:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4818:4:7",
														"nodeType": "YulTypedName",
														"src": "4818:4:7",
														"type": ""
													}
												],
												"src": "4652:419:7"
											},
											{
												"body": {
													"nativeSrc": "5105:152:7",
													"nodeType": "YulBlock",
													"src": "5105:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5122:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5122:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5125:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5125:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5115:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5115:6:7"
																},
																"nativeSrc": "5115:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5115:88:7"
															},
															"nativeSrc": "5115:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5115:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5219:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5219:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5222:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5222:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5212:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:7"
																},
																"nativeSrc": "5212:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5212:15:7"
															},
															"nativeSrc": "5212:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5212:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5243:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5243:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5246:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5246:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5236:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5236:6:7"
																},
																"nativeSrc": "5236:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5236:15:7"
															},
															"nativeSrc": "5236:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5236:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5077:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5077:180:7"
											},
											{
												"body": {
													"nativeSrc": "5307:147:7",
													"nodeType": "YulBlock",
													"src": "5307:147:7",
													"statements": [
														{
															"nativeSrc": "5317:25:7",
															"nodeType": "YulAssignment",
															"src": "5317:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5340:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5340:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5322:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5322:17:7"
																},
																"nativeSrc": "5322:20:7",
																"nodeType": "YulFunctionCall",
																"src": "5322:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5317:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "5317:1:7"
																}
															]
														},
														{
															"nativeSrc": "5351:25:7",
															"nodeType": "YulAssignment",
															"src": "5351:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5374:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5374:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5356:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5356:17:7"
																},
																"nativeSrc": "5356:20:7",
																"nodeType": "YulFunctionCall",
																"src": "5356:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5351:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "5351:1:7"
																}
															]
														},
														{
															"nativeSrc": "5385:16:7",
															"nodeType": "YulAssignment",
															"src": "5385:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5396:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5396:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5399:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5399:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5392:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5392:3:7"
																},
																"nativeSrc": "5392:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5392:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5385:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5385:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5425:22:7",
																"nodeType": "YulBlock",
																"src": "5425:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5427:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5427:16:7"
																			},
																			"nativeSrc": "5427:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5427:18:7"
																		},
																		"nativeSrc": "5427:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5427:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5417:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5417:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5420:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5420:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5414:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5414:2:7"
																},
																"nativeSrc": "5414:10:7",
																"nodeType": "YulFunctionCall",
																"src": "5414:10:7"
															},
															"nativeSrc": "5411:36:7",
															"nodeType": "YulIf",
															"src": "5411:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5263:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5294:1:7",
														"nodeType": "YulTypedName",
														"src": "5294:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5297:1:7",
														"nodeType": "YulTypedName",
														"src": "5297:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5303:3:7",
														"nodeType": "YulTypedName",
														"src": "5303:3:7",
														"type": ""
													}
												],
												"src": "5263:191:7"
											},
											{
												"body": {
													"nativeSrc": "5505:149:7",
													"nodeType": "YulBlock",
													"src": "5505:149:7",
													"statements": [
														{
															"nativeSrc": "5515:25:7",
															"nodeType": "YulAssignment",
															"src": "5515:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5538:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5538:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5520:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5520:17:7"
																},
																"nativeSrc": "5520:20:7",
																"nodeType": "YulFunctionCall",
																"src": "5520:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5515:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "5515:1:7"
																}
															]
														},
														{
															"nativeSrc": "5549:25:7",
															"nodeType": "YulAssignment",
															"src": "5549:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5572:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5572:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5554:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5554:17:7"
																},
																"nativeSrc": "5554:20:7",
																"nodeType": "YulFunctionCall",
																"src": "5554:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5549:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "5549:1:7"
																}
															]
														},
														{
															"nativeSrc": "5583:17:7",
															"nodeType": "YulAssignment",
															"src": "5583:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5595:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5595:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5598:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5598:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5591:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5591:3:7"
																},
																"nativeSrc": "5591:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5591:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5583:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5583:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5625:22:7",
																"nodeType": "YulBlock",
																"src": "5625:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5627:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5627:16:7"
																			},
																			"nativeSrc": "5627:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5627:18:7"
																		},
																		"nativeSrc": "5627:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5627:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5616:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5616:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5622:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5622:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5613:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5613:2:7"
																},
																"nativeSrc": "5613:11:7",
																"nodeType": "YulFunctionCall",
																"src": "5613:11:7"
															},
															"nativeSrc": "5610:37:7",
															"nodeType": "YulIf",
															"src": "5610:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5460:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5491:1:7",
														"nodeType": "YulTypedName",
														"src": "5491:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5494:1:7",
														"nodeType": "YulTypedName",
														"src": "5494:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5500:4:7",
														"nodeType": "YulTypedName",
														"src": "5500:4:7",
														"type": ""
													}
												],
												"src": "5460:194:7"
											},
											{
												"body": {
													"nativeSrc": "5786:206:7",
													"nodeType": "YulBlock",
													"src": "5786:206:7",
													"statements": [
														{
															"nativeSrc": "5796:26:7",
															"nodeType": "YulAssignment",
															"src": "5796:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5808:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5808:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5819:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5819:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5804:3:7"
																},
																"nativeSrc": "5804:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5804:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5796:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5796:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5876:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5876:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5889:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5889:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5900:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5900:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5885:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5885:3:7"
																		},
																		"nativeSrc": "5885:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5885:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5832:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5832:43:7"
																},
																"nativeSrc": "5832:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5832:71:7"
															},
															"nativeSrc": "5832:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5832:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5957:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5957:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5970:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5970:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5981:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5981:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5966:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5966:3:7"
																		},
																		"nativeSrc": "5966:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5966:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5913:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5913:43:7"
																},
																"nativeSrc": "5913:72:7",
																"nodeType": "YulFunctionCall",
																"src": "5913:72:7"
															},
															"nativeSrc": "5913:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "5913:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5660:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5750:9:7",
														"nodeType": "YulTypedName",
														"src": "5750:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5762:6:7",
														"nodeType": "YulTypedName",
														"src": "5762:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5770:6:7",
														"nodeType": "YulTypedName",
														"src": "5770:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5781:4:7",
														"nodeType": "YulTypedName",
														"src": "5781:4:7",
														"type": ""
													}
												],
												"src": "5660:332:7"
											},
											{
												"body": {
													"nativeSrc": "6040:48:7",
													"nodeType": "YulBlock",
													"src": "6040:48:7",
													"statements": [
														{
															"nativeSrc": "6050:32:7",
															"nodeType": "YulAssignment",
															"src": "6050:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6075:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6075:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6068:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6068:6:7"
																		},
																		"nativeSrc": "6068:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6068:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6061:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6061:6:7"
																},
																"nativeSrc": "6061:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6061:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6050:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6050:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5998:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6022:5:7",
														"nodeType": "YulTypedName",
														"src": "6022:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6032:7:7",
														"nodeType": "YulTypedName",
														"src": "6032:7:7",
														"type": ""
													}
												],
												"src": "5998:90:7"
											},
											{
												"body": {
													"nativeSrc": "6134:76:7",
													"nodeType": "YulBlock",
													"src": "6134:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6188:16:7",
																"nodeType": "YulBlock",
																"src": "6188:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6197:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6197:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6200:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6200:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6190:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6190:6:7"
																			},
																			"nativeSrc": "6190:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6190:12:7"
																		},
																		"nativeSrc": "6190:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6190:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6157:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6157:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6179:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6179:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6164:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "6164:14:7"
																				},
																				"nativeSrc": "6164:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6164:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6154:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6154:2:7"
																		},
																		"nativeSrc": "6154:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6154:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6147:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6147:6:7"
																},
																"nativeSrc": "6147:40:7",
																"nodeType": "YulFunctionCall",
																"src": "6147:40:7"
															},
															"nativeSrc": "6144:60:7",
															"nodeType": "YulIf",
															"src": "6144:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6094:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6127:5:7",
														"nodeType": "YulTypedName",
														"src": "6127:5:7",
														"type": ""
													}
												],
												"src": "6094:116:7"
											},
											{
												"body": {
													"nativeSrc": "6276:77:7",
													"nodeType": "YulBlock",
													"src": "6276:77:7",
													"statements": [
														{
															"nativeSrc": "6286:22:7",
															"nodeType": "YulAssignment",
															"src": "6286:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6301:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6301:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6295:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6295:5:7"
																},
																"nativeSrc": "6295:13:7",
																"nodeType": "YulFunctionCall",
																"src": "6295:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6286:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6286:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6341:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6341:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6317:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "6317:23:7"
																},
																"nativeSrc": "6317:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6317:30:7"
															},
															"nativeSrc": "6317:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "6317:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "6216:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6254:6:7",
														"nodeType": "YulTypedName",
														"src": "6254:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6262:3:7",
														"nodeType": "YulTypedName",
														"src": "6262:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6270:5:7",
														"nodeType": "YulTypedName",
														"src": "6270:5:7",
														"type": ""
													}
												],
												"src": "6216:137:7"
											},
											{
												"body": {
													"nativeSrc": "6433:271:7",
													"nodeType": "YulBlock",
													"src": "6433:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6479:83:7",
																"nodeType": "YulBlock",
																"src": "6479:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6481:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6481:77:7"
																			},
																			"nativeSrc": "6481:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6481:79:7"
																		},
																		"nativeSrc": "6481:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6481:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6454:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6454:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6463:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6463:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6450:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6450:3:7"
																		},
																		"nativeSrc": "6450:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6450:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6475:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6475:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6446:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6446:3:7"
																},
																"nativeSrc": "6446:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6446:32:7"
															},
															"nativeSrc": "6443:119:7",
															"nodeType": "YulIf",
															"src": "6443:119:7"
														},
														{
															"nativeSrc": "6572:125:7",
															"nodeType": "YulBlock",
															"src": "6572:125:7",
															"statements": [
																{
																	"nativeSrc": "6587:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6587:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6601:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6601:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6591:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6591:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6616:71:7",
																	"nodeType": "YulAssignment",
																	"src": "6616:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6659:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6659:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6670:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6670:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6655:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6655:3:7"
																				},
																				"nativeSrc": "6655:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6655:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6679:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6679:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "6626:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "6626:28:7"
																		},
																		"nativeSrc": "6626:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6626:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6616:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6616:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6359:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6403:9:7",
														"nodeType": "YulTypedName",
														"src": "6403:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6414:7:7",
														"nodeType": "YulTypedName",
														"src": "6414:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6426:6:7",
														"nodeType": "YulTypedName",
														"src": "6426:6:7",
														"type": ""
													}
												],
												"src": "6359:345:7"
											},
											{
												"body": {
													"nativeSrc": "6836:206:7",
													"nodeType": "YulBlock",
													"src": "6836:206:7",
													"statements": [
														{
															"nativeSrc": "6846:26:7",
															"nodeType": "YulAssignment",
															"src": "6846:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6858:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6858:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6869:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6869:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6854:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6854:3:7"
																},
																"nativeSrc": "6854:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6854:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6846:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6846:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6926:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6926:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6939:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6939:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6950:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6950:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6935:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6935:3:7"
																		},
																		"nativeSrc": "6935:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6935:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6882:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6882:43:7"
																},
																"nativeSrc": "6882:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6882:71:7"
															},
															"nativeSrc": "6882:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6882:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7007:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7007:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7020:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7020:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7031:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7031:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7016:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7016:3:7"
																		},
																		"nativeSrc": "7016:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7016:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6963:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6963:43:7"
																},
																"nativeSrc": "6963:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6963:72:7"
															},
															"nativeSrc": "6963:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6963:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6710:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6800:9:7",
														"nodeType": "YulTypedName",
														"src": "6800:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6812:6:7",
														"nodeType": "YulTypedName",
														"src": "6812:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6820:6:7",
														"nodeType": "YulTypedName",
														"src": "6820:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6831:4:7",
														"nodeType": "YulTypedName",
														"src": "6831:4:7",
														"type": ""
													}
												],
												"src": "6710:332:7"
											},
											{
												"body": {
													"nativeSrc": "7154:65:7",
													"nodeType": "YulBlock",
													"src": "7154:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7176:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7176:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7184:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7184:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7172:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7172:3:7"
																		},
																		"nativeSrc": "7172:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7172:14:7"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b65203020746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "7188:23:7",
																		"nodeType": "YulLiteral",
																		"src": "7188:23:7",
																		"type": "",
																		"value": "Cannot stake 0 tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7165:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7165:6:7"
																},
																"nativeSrc": "7165:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7165:47:7"
															},
															"nativeSrc": "7165:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7165:47:7"
														}
													]
												},
												"name": "store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
												"nativeSrc": "7048:171:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7146:6:7",
														"nodeType": "YulTypedName",
														"src": "7146:6:7",
														"type": ""
													}
												],
												"src": "7048:171:7"
											},
											{
												"body": {
													"nativeSrc": "7371:220:7",
													"nodeType": "YulBlock",
													"src": "7371:220:7",
													"statements": [
														{
															"nativeSrc": "7381:74:7",
															"nodeType": "YulAssignment",
															"src": "7381:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7447:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7447:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7452:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7452:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7388:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7388:58:7"
																},
																"nativeSrc": "7388:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7388:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7381:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7381:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7553:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7553:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
																	"nativeSrc": "7464:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "7464:88:7"
																},
																"nativeSrc": "7464:93:7",
																"nodeType": "YulFunctionCall",
																"src": "7464:93:7"
															},
															"nativeSrc": "7464:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "7464:93:7"
														},
														{
															"nativeSrc": "7566:19:7",
															"nodeType": "YulAssignment",
															"src": "7566:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7577:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7577:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7582:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7582:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7573:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7573:3:7"
																},
																"nativeSrc": "7573:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7573:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7566:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7566:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7225:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7359:3:7",
														"nodeType": "YulTypedName",
														"src": "7359:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7367:3:7",
														"nodeType": "YulTypedName",
														"src": "7367:3:7",
														"type": ""
													}
												],
												"src": "7225:366:7"
											},
											{
												"body": {
													"nativeSrc": "7768:248:7",
													"nodeType": "YulBlock",
													"src": "7768:248:7",
													"statements": [
														{
															"nativeSrc": "7778:26:7",
															"nodeType": "YulAssignment",
															"src": "7778:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7790:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7790:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7801:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7801:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7786:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7786:3:7"
																},
																"nativeSrc": "7786:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7786:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7778:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7778:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7825:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7825:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7836:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7836:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7821:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7821:3:7"
																		},
																		"nativeSrc": "7821:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7821:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7844:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7844:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7850:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7850:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7840:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7840:3:7"
																		},
																		"nativeSrc": "7840:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7840:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7814:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7814:6:7"
																},
																"nativeSrc": "7814:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7814:47:7"
															},
															"nativeSrc": "7814:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7814:47:7"
														},
														{
															"nativeSrc": "7870:139:7",
															"nodeType": "YulAssignment",
															"src": "7870:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8004:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8004:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7878:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "7878:124:7"
																},
																"nativeSrc": "7878:131:7",
																"nodeType": "YulFunctionCall",
																"src": "7878:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7870:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7870:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7597:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7748:9:7",
														"nodeType": "YulTypedName",
														"src": "7748:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7763:4:7",
														"nodeType": "YulTypedName",
														"src": "7763:4:7",
														"type": ""
													}
												],
												"src": "7597:419:7"
											},
											{
												"body": {
													"nativeSrc": "8176:288:7",
													"nodeType": "YulBlock",
													"src": "8176:288:7",
													"statements": [
														{
															"nativeSrc": "8186:26:7",
															"nodeType": "YulAssignment",
															"src": "8186:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8198:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8198:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8209:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8209:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8194:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8194:3:7"
																},
																"nativeSrc": "8194:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8194:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8186:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8186:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8266:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8266:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8279:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8279:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8290:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8290:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8275:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8275:3:7"
																		},
																		"nativeSrc": "8275:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8275:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8222:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8222:43:7"
																},
																"nativeSrc": "8222:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8222:71:7"
															},
															"nativeSrc": "8222:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8222:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8347:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8347:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8360:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8360:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8371:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8371:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8356:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8356:3:7"
																		},
																		"nativeSrc": "8356:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8356:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8303:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8303:43:7"
																},
																"nativeSrc": "8303:72:7",
																"nodeType": "YulFunctionCall",
																"src": "8303:72:7"
															},
															"nativeSrc": "8303:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "8303:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8429:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8429:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8442:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8442:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8453:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8453:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8438:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8438:3:7"
																		},
																		"nativeSrc": "8438:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8438:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8385:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8385:43:7"
																},
																"nativeSrc": "8385:72:7",
																"nodeType": "YulFunctionCall",
																"src": "8385:72:7"
															},
															"nativeSrc": "8385:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "8385:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8022:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8132:9:7",
														"nodeType": "YulTypedName",
														"src": "8132:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8144:6:7",
														"nodeType": "YulTypedName",
														"src": "8144:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8152:6:7",
														"nodeType": "YulTypedName",
														"src": "8152:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8160:6:7",
														"nodeType": "YulTypedName",
														"src": "8160:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8171:4:7",
														"nodeType": "YulTypedName",
														"src": "8171:4:7",
														"type": ""
													}
												],
												"src": "8022:442:7"
											},
											{
												"body": {
													"nativeSrc": "8518:362:7",
													"nodeType": "YulBlock",
													"src": "8518:362:7",
													"statements": [
														{
															"nativeSrc": "8528:25:7",
															"nodeType": "YulAssignment",
															"src": "8528:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8551:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8551:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8533:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8533:17:7"
																},
																"nativeSrc": "8533:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8533:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8528:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8528:1:7"
																}
															]
														},
														{
															"nativeSrc": "8562:25:7",
															"nodeType": "YulAssignment",
															"src": "8562:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8585:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8585:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8567:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8567:17:7"
																},
																"nativeSrc": "8567:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8567:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8562:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8562:1:7"
																}
															]
														},
														{
															"nativeSrc": "8596:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8596:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8619:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8619:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8622:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8622:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8615:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8615:3:7"
																},
																"nativeSrc": "8615:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8615:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8600:11:7",
																	"nodeType": "YulTypedName",
																	"src": "8600:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8633:41:7",
															"nodeType": "YulAssignment",
															"src": "8633:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8662:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "8662:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8644:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8644:17:7"
																},
																"nativeSrc": "8644:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8644:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8633:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8633:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8851:22:7",
																"nodeType": "YulBlock",
																"src": "8851:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8853:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8853:16:7"
																			},
																			"nativeSrc": "8853:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8853:18:7"
																		},
																		"nativeSrc": "8853:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8853:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8784:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8784:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8777:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8777:6:7"
																				},
																				"nativeSrc": "8777:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8777:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8807:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8807:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8814:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "8814:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8823:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "8823:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8810:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8810:3:7"
																						},
																						"nativeSrc": "8810:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8810:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8804:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8804:2:7"
																				},
																				"nativeSrc": "8804:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8804:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8757:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8757:2:7"
																		},
																		"nativeSrc": "8757:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8757:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8737:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8737:6:7"
																},
																"nativeSrc": "8737:113:7",
																"nodeType": "YulFunctionCall",
																"src": "8737:113:7"
															},
															"nativeSrc": "8734:139:7",
															"nodeType": "YulIf",
															"src": "8734:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8470:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8501:1:7",
														"nodeType": "YulTypedName",
														"src": "8501:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8504:1:7",
														"nodeType": "YulTypedName",
														"src": "8504:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8510:7:7",
														"nodeType": "YulTypedName",
														"src": "8510:7:7",
														"type": ""
													}
												],
												"src": "8470:410:7"
											},
											{
												"body": {
													"nativeSrc": "8914:152:7",
													"nodeType": "YulBlock",
													"src": "8914:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8931:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8931:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8934:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8934:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8924:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8924:6:7"
																},
																"nativeSrc": "8924:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8924:88:7"
															},
															"nativeSrc": "8924:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8924:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9028:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9028:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9031:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9031:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9021:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9021:6:7"
																},
																"nativeSrc": "9021:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9021:15:7"
															},
															"nativeSrc": "9021:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9021:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9052:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9052:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9055:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9055:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9045:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9045:6:7"
																},
																"nativeSrc": "9045:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9045:15:7"
															},
															"nativeSrc": "9045:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9045:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8886:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8886:180:7"
											},
											{
												"body": {
													"nativeSrc": "9114:143:7",
													"nodeType": "YulBlock",
													"src": "9114:143:7",
													"statements": [
														{
															"nativeSrc": "9124:25:7",
															"nodeType": "YulAssignment",
															"src": "9124:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9147:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9147:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9129:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9129:17:7"
																},
																"nativeSrc": "9129:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9129:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9124:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9124:1:7"
																}
															]
														},
														{
															"nativeSrc": "9158:25:7",
															"nodeType": "YulAssignment",
															"src": "9158:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9181:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9181:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9163:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9163:17:7"
																},
																"nativeSrc": "9163:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9163:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9158:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9158:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9205:22:7",
																"nodeType": "YulBlock",
																"src": "9205:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9207:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9207:16:7"
																			},
																			"nativeSrc": "9207:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9207:18:7"
																		},
																		"nativeSrc": "9207:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9207:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9202:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9202:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9195:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9195:6:7"
																},
																"nativeSrc": "9195:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9195:9:7"
															},
															"nativeSrc": "9192:35:7",
															"nodeType": "YulIf",
															"src": "9192:35:7"
														},
														{
															"nativeSrc": "9237:14:7",
															"nodeType": "YulAssignment",
															"src": "9237:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9246:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9246:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9249:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9249:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9242:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9242:3:7"
																},
																"nativeSrc": "9242:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9242:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9237:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9237:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9072:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9103:1:7",
														"nodeType": "YulTypedName",
														"src": "9103:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9106:1:7",
														"nodeType": "YulTypedName",
														"src": "9106:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9112:1:7",
														"nodeType": "YulTypedName",
														"src": "9112:1:7",
														"type": ""
													}
												],
												"src": "9072:185:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$877_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$877_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake 0 tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009c575f3560e01c80638da5cb5b116100645780638da5cb5b146101465780639087049214610164578063a694fc3a14610182578063d82e39621461019e578063f2fde38b146101ce5761009c565b806316934fc4146100a05780632e17de78146100d257806331d7a262146100ee578063715018a61461011e57806372f702f314610128575b5f80fd5b6100ba60048036038101906100b591906109c9565b6101ea565b6040516100c993929190610a0c565b60405180910390f35b6100ec60048036038101906100e79190610a6b565b610210565b005b610108600480360381019061010391906109c9565b610479565b6040516101159190610a96565b60405180910390f35b6101266104df565b005b6101306104f2565b60405161013d9190610b0a565b60405180910390f35b61014e610517565b60405161015b9190610b32565b60405180910390f35b61016c61053e565b6040516101799190610a96565b60405180910390f35b61019c60048036038101906101979190610a6b565b610544565b005b6101b860048036038101906101b391906109c9565b61070c565b6040516101c59190610a96565b60405180910390f35b6101e860048036038101906101e391906109c9565b610798565b005b6003602052805f5260405f205f91509050805f0154908060010154908060020154905083565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905081815f01541015610296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028d90610ba5565b60405180910390fd5b5f6102a03361070c565b90505f8260010154826102b39190610bf0565b905083835f015f8282546102c79190610c23565b925050819055505f836001018190555043836002018190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b815260040161033c929190610c56565b6020604051808303815f875af1158015610358573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061037c9190610cb2565b505f8111156104235760015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103e1929190610c56565b6020604051808303815f875af11580156103fd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104219190610cb2565b505b3373ffffffffffffffffffffffffffffffffffffffff167f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e858360405161046b929190610cdd565b60405180910390a250505050565b5f8060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f6104c48461070c565b90508160010154816104d69190610bf0565b92505050919050565b6104e761081c565b6104f05f6108a3565b565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b5f8111610586576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057d90610d4e565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015411156105f9575f6105db3361070c565b905080826001015f8282546105f09190610bf0565b92505081905550505b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161065793929190610d6c565b6020604051808303815f875af1158015610673573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106979190610cb2565b5081815f015f8282546106aa9190610bf0565b925050819055504381600201819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d836040516107009190610a96565b60405180910390a25050565b5f8060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f81600201544361075e9190610c23565b9050670de0b6b3a764000081600254845f015461077b9190610da1565b6107859190610da1565b61078f9190610e0f565b92505050919050565b6107a061081c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610810575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108079190610b32565b60405180910390fd5b610819816108a3565b50565b610824610964565b73ffffffffffffffffffffffffffffffffffffffff16610842610517565b73ffffffffffffffffffffffffffffffffffffffff16146108a157610865610964565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108989190610b32565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109988261096f565b9050919050565b6109a88161098e565b81146109b2575f80fd5b50565b5f813590506109c38161099f565b92915050565b5f602082840312156109de576109dd61096b565b5b5f6109eb848285016109b5565b91505092915050565b5f819050919050565b610a06816109f4565b82525050565b5f606082019050610a1f5f8301866109fd565b610a2c60208301856109fd565b610a3960408301846109fd565b949350505050565b610a4a816109f4565b8114610a54575f80fd5b50565b5f81359050610a6581610a41565b92915050565b5f60208284031215610a8057610a7f61096b565b5b5f610a8d84828501610a57565b91505092915050565b5f602082019050610aa95f8301846109fd565b92915050565b5f819050919050565b5f610ad2610acd610ac88461096f565b610aaf565b61096f565b9050919050565b5f610ae382610ab8565b9050919050565b5f610af482610ad9565b9050919050565b610b0481610aea565b82525050565b5f602082019050610b1d5f830184610afb565b92915050565b610b2c8161098e565b82525050565b5f602082019050610b455f830184610b23565b92915050565b5f82825260208201905092915050565b7f4e6f7420656e6f756768207374616b65640000000000000000000000000000005f82015250565b5f610b8f601183610b4b565b9150610b9a82610b5b565b602082019050919050565b5f6020820190508181035f830152610bbc81610b83565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610bfa826109f4565b9150610c05836109f4565b9250828201905080821115610c1d57610c1c610bc3565b5b92915050565b5f610c2d826109f4565b9150610c38836109f4565b9250828203905081811115610c5057610c4f610bc3565b5b92915050565b5f604082019050610c695f830185610b23565b610c7660208301846109fd565b9392505050565b5f8115159050919050565b610c9181610c7d565b8114610c9b575f80fd5b50565b5f81519050610cac81610c88565b92915050565b5f60208284031215610cc757610cc661096b565b5b5f610cd484828501610c9e565b91505092915050565b5f604082019050610cf05f8301856109fd565b610cfd60208301846109fd565b9392505050565b7f43616e6e6f74207374616b65203020746f6b656e7300000000000000000000005f82015250565b5f610d38601583610b4b565b9150610d4382610d04565b602082019050919050565b5f6020820190508181035f830152610d6581610d2c565b9050919050565b5f606082019050610d7f5f830186610b23565b610d8c6020830185610b23565b610d9960408301846109fd565b949350505050565b5f610dab826109f4565b9150610db6836109f4565b9250828202610dc4816109f4565b91508282048414831517610ddb57610dda610bc3565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610e19826109f4565b9150610e24836109f4565b925082610e3457610e33610de2565b5b82820490509291505056fea26469706673582212204ee478acf463d175d6e232d63b558849deb7c5a6c8f24726edccfe3ad133ecb064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x90870492 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1CE JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x31D7A262 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x128 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x210 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x4DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x130 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH2 0x517 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH2 0x53E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x544 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28D SWAP1 PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2A0 CALLER PUSH2 0x70C JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0xBF0 JUMP JUMPDEST SWAP1 POP DUP4 DUP4 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0xC23 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33C SWAP3 SWAP2 SWAP1 PUSH2 0xC56 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x358 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST POP PUSH0 DUP2 GT ISZERO PUSH2 0x423 JUMPI PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E1 SWAP3 SWAP2 SWAP1 PUSH2 0xC56 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3FD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x421 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x46B SWAP3 SWAP2 SWAP1 PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH2 0x4C4 DUP5 PUSH2 0x70C JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD DUP2 PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0xBF0 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E7 PUSH2 0x81C JUMP JUMPDEST PUSH2 0x4F0 PUSH0 PUSH2 0x8A3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57D SWAP1 PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x5F9 JUMPI PUSH0 PUSH2 0x5DB CALLER PUSH2 0x70C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5F0 SWAP2 SWAP1 PUSH2 0xBF0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x657 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x673 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x697 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST POP DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0xBF0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP NUMBER DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP4 PUSH1 0x40 MLOAD PUSH2 0x700 SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x75E SWAP2 SWAP1 PUSH2 0xC23 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH1 0x2 SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x77B SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH2 0x785 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH2 0x78F SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A0 PUSH2 0x81C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x810 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x807 SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x819 DUP2 PUSH2 0x8A3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x824 PUSH2 0x964 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x842 PUSH2 0x517 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A1 JUMPI PUSH2 0x865 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x898 SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x998 DUP3 PUSH2 0x96F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A8 DUP2 PUSH2 0x98E JUMP JUMPDEST DUP2 EQ PUSH2 0x9B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9C3 DUP2 PUSH2 0x99F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DE JUMPI PUSH2 0x9DD PUSH2 0x96B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9EB DUP5 DUP3 DUP6 ADD PUSH2 0x9B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA06 DUP2 PUSH2 0x9F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA1F PUSH0 DUP4 ADD DUP7 PUSH2 0x9FD JUMP JUMPDEST PUSH2 0xA2C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9FD JUMP JUMPDEST PUSH2 0xA39 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9FD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xA4A DUP2 PUSH2 0x9F4 JUMP JUMPDEST DUP2 EQ PUSH2 0xA54 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA65 DUP2 PUSH2 0xA41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA80 JUMPI PUSH2 0xA7F PUSH2 0x96B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA8D DUP5 DUP3 DUP6 ADD PUSH2 0xA57 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA9 PUSH0 DUP4 ADD DUP5 PUSH2 0x9FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAD2 PUSH2 0xACD PUSH2 0xAC8 DUP5 PUSH2 0x96F JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAE3 DUP3 PUSH2 0xAB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAF4 DUP3 PUSH2 0xAD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB04 DUP2 PUSH2 0xAEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB1D PUSH0 DUP4 ADD DUP5 PUSH2 0xAFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB2C DUP2 PUSH2 0x98E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB45 PUSH0 DUP4 ADD DUP5 PUSH2 0xB23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768207374616B6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB8F PUSH1 0x11 DUP4 PUSH2 0xB4B JUMP JUMPDEST SWAP2 POP PUSH2 0xB9A DUP3 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBBC DUP2 PUSH2 0xB83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xBFA DUP3 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xC05 DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC1D JUMPI PUSH2 0xC1C PUSH2 0xBC3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC2D DUP3 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xC38 DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC50 JUMPI PUSH2 0xC4F PUSH2 0xBC3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC69 PUSH0 DUP4 ADD DUP6 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xC76 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC91 DUP2 PUSH2 0xC7D JUMP JUMPDEST DUP2 EQ PUSH2 0xC9B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCAC DUP2 PUSH2 0xC88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC7 JUMPI PUSH2 0xCC6 PUSH2 0x96B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCD4 DUP5 DUP3 DUP6 ADD PUSH2 0xC9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCF0 PUSH0 DUP4 ADD DUP6 PUSH2 0x9FD JUMP JUMPDEST PUSH2 0xCFD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B65203020746F6B656E730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD38 PUSH1 0x15 DUP4 PUSH2 0xB4B JUMP JUMPDEST SWAP2 POP PUSH2 0xD43 DUP3 PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD65 DUP2 PUSH2 0xD2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD7F PUSH0 DUP4 ADD DUP7 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xD8C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xD99 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9FD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDAB DUP3 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xDB6 DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xDC4 DUP2 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xDDB JUMPI PUSH2 0xDDA PUSH2 0xBC3 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE19 DUP3 PUSH2 0x9F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xE24 DUP4 PUSH2 0x9F4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE34 JUMPI PUSH2 0xE33 PUSH2 0xDE2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xE4 PUSH25 0xACF463D175D6E232D63B558849DEB7C5A6C8F24726EDCCFE3A 0xD1 CALLER 0xEC 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "236:3160:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;639:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2072:628;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3159:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;277:26:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;310:33:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1471:519;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2794:270;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;639:43:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2072:628::-;2126:22;2151:6;:18;2158:10;2151:18;;;;;;;;;;;;;;;2126:43;;2203:7;2188:4;:11;;;:22;;2180:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2245:21;2269:27;2285:10;2269:15;:27::i;:::-;2245:51;;2307:19;2345:4;:15;;;2329:13;:31;;;;:::i;:::-;2307:53;;2388:7;2373:4;:11;;;:22;;;;;;;:::i;:::-;;;;;;;;2424:1;2406:4;:15;;:19;;;;2459:12;2436:4;:20;;:35;;;;2484:12;;;;;;;;;;;:21;;;2506:10;2518:7;2484:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2557:1;2543:11;:15;2539:94;;;2575:12;;;;;;;;;;;:21;;;2597:10;2609:11;2575:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2539:94;2659:10;2650:42;;;2671:7;2680:11;2650:42;;;;;;;:::i;:::-;;;;;;;;2115:585;;;2072:628;:::o;3159:234::-;3221:7;3241:22;3266:6;:13;3273:5;3266:13;;;;;;;;;;;;;;;3241:38;;3290:21;3314:22;3330:5;3314:15;:22::i;:::-;3290:46;;3370:4;:15;;;3354:13;:31;;;;:::i;:::-;3347:38;;;;3159:234;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;277:26:6:-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;310:33:6:-;;;;:::o;1471:519::-;1541:1;1531:7;:11;1523:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1581:22;1606:6;:18;1613:10;1606:18;;;;;;;;;;;;;;;1581:43;;1655:1;1641:4;:11;;;:15;1637:146;;;1673:21;1697:27;1713:10;1697:15;:27::i;:::-;1673:51;;1758:13;1739:4;:15;;;:32;;;;;;;:::i;:::-;;;;;;;;1658:125;1637:146;1795:12;;;;;;;;;;;:25;;;1821:10;1841:4;1848:7;1795:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1884:7;1869:4;:11;;;:22;;;;;;;:::i;:::-;;;;;;;;1925:12;1902:4;:20;;:35;;;;1962:10;1955:27;;;1974:7;1955:27;;;;;;:::i;:::-;;;;;;;;1512:478;1471:519;:::o;2794:270::-;2855:7;2875:22;2900:6;:13;2907:5;2900:13;;;;;;;;;;;;;;;2875:38;;2924:20;2962:4;:20;;;2947:12;:35;;;;:::i;:::-;2924:58;;3052:4;3036:12;3015:18;;3001:4;:11;;;:32;;;;:::i;:::-;:47;;;;:::i;:::-;3000:56;;;;:::i;:::-;2993:63;;;;2794:270;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:442::-;1532:4;1570:2;1559:9;1555:18;1547:26;;1583:71;1651:1;1640:9;1636:17;1627:6;1583:71;:::i;:::-;1664:72;1732:2;1721:9;1717:18;1708:6;1664:72;:::i;:::-;1746;1814:2;1803:9;1799:18;1790:6;1746:72;:::i;:::-;1383:442;;;;;;:::o;1831:122::-;1904:24;1922:5;1904:24;:::i;:::-;1897:5;1894:35;1884:63;;1943:1;1940;1933:12;1884:63;1831:122;:::o;1959:139::-;2005:5;2043:6;2030:20;2021:29;;2059:33;2086:5;2059:33;:::i;:::-;1959:139;;;;:::o;2104:329::-;2163:6;2212:2;2200:9;2191:7;2187:23;2183:32;2180:119;;;2218:79;;:::i;:::-;2180:119;2338:1;2363:53;2408:7;2399:6;2388:9;2384:22;2363:53;:::i;:::-;2353:63;;2309:117;2104:329;;;;:::o;2439:222::-;2532:4;2570:2;2559:9;2555:18;2547:26;;2583:71;2651:1;2640:9;2636:17;2627:6;2583:71;:::i;:::-;2439:222;;;;:::o;2667:60::-;2695:3;2716:5;2709:12;;2667:60;;;:::o;2733:142::-;2783:9;2816:53;2834:34;2843:24;2861:5;2843:24;:::i;:::-;2834:34;:::i;:::-;2816:53;:::i;:::-;2803:66;;2733:142;;;:::o;2881:126::-;2931:9;2964:37;2995:5;2964:37;:::i;:::-;2951:50;;2881:126;;;:::o;3013:140::-;3077:9;3110:37;3141:5;3110:37;:::i;:::-;3097:50;;3013:140;;;:::o;3159:159::-;3260:51;3305:5;3260:51;:::i;:::-;3255:3;3248:64;3159:159;;:::o;3324:250::-;3431:4;3469:2;3458:9;3454:18;3446:26;;3482:85;3564:1;3553:9;3549:17;3540:6;3482:85;:::i;:::-;3324:250;;;;:::o;3580:118::-;3667:24;3685:5;3667:24;:::i;:::-;3662:3;3655:37;3580:118;;:::o;3704:222::-;3797:4;3835:2;3824:9;3820:18;3812:26;;3848:71;3916:1;3905:9;3901:17;3892:6;3848:71;:::i;:::-;3704:222;;;;:::o;3932:169::-;4016:11;4050:6;4045:3;4038:19;4090:4;4085:3;4081:14;4066:29;;3932:169;;;;:::o;4107:167::-;4247:19;4243:1;4235:6;4231:14;4224:43;4107:167;:::o;4280:366::-;4422:3;4443:67;4507:2;4502:3;4443:67;:::i;:::-;4436:74;;4519:93;4608:3;4519:93;:::i;:::-;4637:2;4632:3;4628:12;4621:19;;4280:366;;;:::o;4652:419::-;4818:4;4856:2;4845:9;4841:18;4833:26;;4905:9;4899:4;4895:20;4891:1;4880:9;4876:17;4869:47;4933:131;5059:4;4933:131;:::i;:::-;4925:139;;4652:419;;;:::o;5077:180::-;5125:77;5122:1;5115:88;5222:4;5219:1;5212:15;5246:4;5243:1;5236:15;5263:191;5303:3;5322:20;5340:1;5322:20;:::i;:::-;5317:25;;5356:20;5374:1;5356:20;:::i;:::-;5351:25;;5399:1;5396;5392:9;5385:16;;5420:3;5417:1;5414:10;5411:36;;;5427:18;;:::i;:::-;5411:36;5263:191;;;;:::o;5460:194::-;5500:4;5520:20;5538:1;5520:20;:::i;:::-;5515:25;;5554:20;5572:1;5554:20;:::i;:::-;5549:25;;5598:1;5595;5591:9;5583:17;;5622:1;5616:4;5613:11;5610:37;;;5627:18;;:::i;:::-;5610:37;5460:194;;;;:::o;5660:332::-;5781:4;5819:2;5808:9;5804:18;5796:26;;5832:71;5900:1;5889:9;5885:17;5876:6;5832:71;:::i;:::-;5913:72;5981:2;5970:9;5966:18;5957:6;5913:72;:::i;:::-;5660:332;;;;;:::o;5998:90::-;6032:7;6075:5;6068:13;6061:21;6050:32;;5998:90;;;:::o;6094:116::-;6164:21;6179:5;6164:21;:::i;:::-;6157:5;6154:32;6144:60;;6200:1;6197;6190:12;6144:60;6094:116;:::o;6216:137::-;6270:5;6301:6;6295:13;6286:22;;6317:30;6341:5;6317:30;:::i;:::-;6216:137;;;;:::o;6359:345::-;6426:6;6475:2;6463:9;6454:7;6450:23;6446:32;6443:119;;;6481:79;;:::i;:::-;6443:119;6601:1;6626:61;6679:7;6670:6;6659:9;6655:22;6626:61;:::i;:::-;6616:71;;6572:125;6359:345;;;;:::o;6710:332::-;6831:4;6869:2;6858:9;6854:18;6846:26;;6882:71;6950:1;6939:9;6935:17;6926:6;6882:71;:::i;:::-;6963:72;7031:2;7020:9;7016:18;7007:6;6963:72;:::i;:::-;6710:332;;;;;:::o;7048:171::-;7188:23;7184:1;7176:6;7172:14;7165:47;7048:171;:::o;7225:366::-;7367:3;7388:67;7452:2;7447:3;7388:67;:::i;:::-;7381:74;;7464:93;7553:3;7464:93;:::i;:::-;7582:2;7577:3;7573:12;7566:19;;7225:366;;;:::o;7597:419::-;7763:4;7801:2;7790:9;7786:18;7778:26;;7850:9;7844:4;7840:20;7836:1;7825:9;7821:17;7814:47;7878:131;8004:4;7878:131;:::i;:::-;7870:139;;7597:419;;;:::o;8022:442::-;8171:4;8209:2;8198:9;8194:18;8186:26;;8222:71;8290:1;8279:9;8275:17;8266:6;8222:71;:::i;:::-;8303:72;8371:2;8360:9;8356:18;8347:6;8303:72;:::i;:::-;8385;8453:2;8442:9;8438:18;8429:6;8385:72;:::i;:::-;8022:442;;;;;;:::o;8470:410::-;8510:7;8533:20;8551:1;8533:20;:::i;:::-;8528:25;;8567:20;8585:1;8567:20;:::i;:::-;8562:25;;8622:1;8619;8615:9;8644:30;8662:11;8644:30;:::i;:::-;8633:41;;8823:1;8814:7;8810:15;8807:1;8804:22;8784:1;8777:9;8757:83;8734:139;;8853:18;;:::i;:::-;8734:139;8518:362;8470:410;;;;:::o;8886:180::-;8934:77;8931:1;8924:88;9031:4;9028:1;9021:15;9055:4;9052:1;9045:15;9072:185;9112:1;9129:20;9147:1;9129:20;:::i;:::-;9124:25;;9163:20;9181:1;9163:20;:::i;:::-;9158:25;;9202:1;9192:35;;9207:18;;:::i;:::-;9192:35;9249:1;9246;9242:9;9237:14;;9072:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "740200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"calculateReward(address)": "infinite",
								"owner()": "2515",
								"pendingRewards(address)": "infinite",
								"renounceOwnership()": "infinite",
								"rewardRatePerBlock()": "2447",
								"stake(uint256)": "infinite",
								"stakes(address)": "infinite",
								"stakingToken()": "infinite",
								"transferOwnership(address)": "infinite",
								"unstake(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 236,
									"end": 3396,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 236,
									"end": 3396,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 236,
									"end": 3396,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1047,
									"end": 1401,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1141,
									"end": 1153,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1199,
									"end": 1200,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1174,
									"end": 1201,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1174,
									"end": 1201,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1174,
									"end": 1187,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1174,
									"end": 1201,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1174,
									"end": 1201,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1174,
									"end": 1201,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1166,
									"end": 1227,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1166,
									"end": 1227,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1268,
									"end": 1269,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 1265,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1246,
									"end": 1269,
									"modifierDepth": 1,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1238,
									"end": 1293,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1238,
									"end": 1293,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1328,
									"end": 1341,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1306,
									"end": 1318,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1306,
									"end": 1318,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1306,
									"end": 1342,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1306,
									"end": 1342,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1306,
									"end": 1342,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1306,
									"end": 1342,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1306,
									"end": 1342,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1306,
									"end": 1342,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1306,
									"end": 1342,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1306,
									"end": 1342,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1306,
									"end": 1342,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1306,
									"end": 1342,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1306,
									"end": 1342,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1306,
									"end": 1342,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1306,
									"end": 1342,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1306,
									"end": 1342,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1306,
									"end": 1342,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1306,
									"end": 1342,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1306,
									"end": 1342,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1306,
									"end": 1342,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1374,
									"end": 1393,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1371,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1353,
									"end": 1393,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1393,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1393,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1393,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1401,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 236,
									"end": 3396,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 236,
									"end": 3396,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1979,
									"end": 1984,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1961,
									"end": 1985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1956,
									"end": 1959,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1949,
									"end": 1986,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1992,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2091,
									"end": 2095,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2129,
									"end": 2131,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2118,
									"end": 2127,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2114,
									"end": 2132,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2210,
									"end": 2211,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2199,
									"end": 2208,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2195,
									"end": 2212,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2186,
									"end": 2192,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 2142,
									"end": 2213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2220,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2226,
									"end": 2395,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 2226,
									"end": 2395,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2310,
									"end": 2321,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2344,
									"end": 2350,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2339,
									"end": 2342,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2332,
									"end": 2351,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2384,
									"end": 2388,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2379,
									"end": 2382,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2375,
									"end": 2389,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2360,
									"end": 2389,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2360,
									"end": 2389,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2226,
									"end": 2395,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2226,
									"end": 2395,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2226,
									"end": 2395,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2226,
									"end": 2395,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2226,
									"end": 2395,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2572,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 2401,
									"end": 2572,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2541,
									"end": 2564,
									"name": "PUSH",
									"source": 7,
									"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
								},
								{
									"begin": 2537,
									"end": 2538,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2529,
									"end": 2535,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2525,
									"end": 2539,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2518,
									"end": 2565,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2572,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2572,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2578,
									"end": 2944,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 2578,
									"end": 2944,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2720,
									"end": 2723,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2741,
									"end": 2808,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2805,
									"end": 2807,
									"name": "PUSH",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 2800,
									"end": 2803,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2741,
									"end": 2808,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 2741,
									"end": 2808,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2741,
									"end": 2808,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2741,
									"end": 2808,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2734,
									"end": 2808,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2734,
									"end": 2808,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2817,
									"end": 2910,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2906,
									"end": 2909,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2817,
									"end": 2910,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 2817,
									"end": 2910,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2817,
									"end": 2910,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2817,
									"end": 2910,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2935,
									"end": 2937,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2933,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2926,
									"end": 2938,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2938,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2938,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2578,
									"end": 2944,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2578,
									"end": 2944,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2578,
									"end": 2944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2578,
									"end": 2944,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2950,
									"end": 3369,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 2950,
									"end": 3369,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3116,
									"end": 3120,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3154,
									"end": 3156,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3143,
									"end": 3152,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3139,
									"end": 3157,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3131,
									"end": 3157,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3131,
									"end": 3157,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3203,
									"end": 3212,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3197,
									"end": 3201,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3193,
									"end": 3213,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3190,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3178,
									"end": 3187,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3174,
									"end": 3191,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3167,
									"end": 3214,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3231,
									"end": 3362,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3357,
									"end": 3361,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3231,
									"end": 3362,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 3231,
									"end": 3362,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3231,
									"end": 3362,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3231,
									"end": 3362,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3223,
									"end": 3362,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3223,
									"end": 3362,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2950,
									"end": 3369,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2950,
									"end": 3369,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2950,
									"end": 3369,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2950,
									"end": 3369,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3375,
									"end": 3544,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 3375,
									"end": 3544,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3515,
									"end": 3536,
									"name": "PUSH",
									"source": 7,
									"value": "496E76616C696420726577617264207261746500000000000000000000000000"
								},
								{
									"begin": 3511,
									"end": 3512,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3503,
									"end": 3509,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3499,
									"end": 3513,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3492,
									"end": 3537,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3375,
									"end": 3544,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3375,
									"end": 3544,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 3916,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 3550,
									"end": 3916,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3692,
									"end": 3695,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3713,
									"end": 3780,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3777,
									"end": 3779,
									"name": "PUSH",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 3772,
									"end": 3775,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3713,
									"end": 3780,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 3713,
									"end": 3780,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3713,
									"end": 3780,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3713,
									"end": 3780,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3706,
									"end": 3780,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3706,
									"end": 3780,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3789,
									"end": 3882,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3878,
									"end": 3881,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3789,
									"end": 3882,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 3789,
									"end": 3882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3789,
									"end": 3882,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3789,
									"end": 3882,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3907,
									"end": 3909,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3902,
									"end": 3905,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3891,
									"end": 3910,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3891,
									"end": 3910,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 3916,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 3916,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 3916,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 3916,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3922,
									"end": 4341,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 3922,
									"end": 4341,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4088,
									"end": 4092,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4126,
									"end": 4128,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4115,
									"end": 4124,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4111,
									"end": 4129,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4103,
									"end": 4129,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4103,
									"end": 4129,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4175,
									"end": 4184,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4169,
									"end": 4173,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4165,
									"end": 4185,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4161,
									"end": 4162,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4150,
									"end": 4159,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4146,
									"end": 4163,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4139,
									"end": 4186,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4334,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 4329,
									"end": 4333,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4334,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 4203,
									"end": 4334,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4334,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 4203,
									"end": 4334,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4195,
									"end": 4334,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4195,
									"end": 4334,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3922,
									"end": 4341,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3922,
									"end": 4341,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3922,
									"end": 4341,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3922,
									"end": 4341,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 236,
									"end": 3396,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 236,
									"end": 3396,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 236,
									"end": 3396,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 236,
									"end": 3396,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 236,
									"end": 3396,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 236,
									"end": 3396,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 236,
									"end": 3396,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 236,
									"end": 3396,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 236,
									"end": 3396,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204ee478acf463d175d6e232d63b558849deb7c5a6c8f24726edccfe3ad133ecb064736f6c634300081a0033",
									".code": [
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "90870492"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "A694FC3A"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "D82E3962"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "16934FC4"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "2E17DE78"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "31D7A262"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "72F702F3"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 236,
											"end": 3396,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 639,
											"end": 682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 639,
											"end": 682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 639,
											"end": 682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2072,
											"end": 2700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2072,
											"end": 2700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 3159,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3159,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3159,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 277,
											"end": 303,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 277,
											"end": 303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 277,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 277,
											"end": 303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 277,
											"end": 303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 277,
											"end": 303,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 277,
											"end": 303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 277,
											"end": 303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 277,
											"end": 303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 277,
											"end": 303,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 310,
											"end": 343,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 310,
											"end": 343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 310,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 310,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 310,
											"end": 343,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 310,
											"end": 343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 310,
											"end": 343,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 343,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 310,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 310,
											"end": 343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 310,
											"end": 343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 310,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 310,
											"end": 343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 310,
											"end": 343,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 310,
											"end": 343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 310,
											"end": 343,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 343,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 310,
											"end": 343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 310,
											"end": 343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 310,
											"end": 343,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 310,
											"end": 343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 310,
											"end": 343,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1471,
											"end": 1990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1471,
											"end": 1990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2794,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2794,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2794,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 639,
											"end": 682,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 639,
											"end": 682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 639,
											"end": 682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2148,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2157,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2168,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2169,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2199,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2199,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2199,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2210,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2210,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2180,
											"end": 2232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2180,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2266,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2285,
											"end": 2295,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2269,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2296,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2269,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2296,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2326,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2345,
											"end": 2349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2360,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2345,
											"end": 2360,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2360,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2342,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2329,
											"end": 2360,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2360,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2329,
											"end": 2360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2360,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2329,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2360,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2395,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2377,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2384,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2384,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2384,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2373,
											"end": 2395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2395,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2424,
											"end": 2425,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2406,
											"end": 2410,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2421,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2406,
											"end": 2421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2425,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2425,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2440,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2436,
											"end": 2456,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2471,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2505,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2484,
											"end": 2505,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2505,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 2506,
											"end": 2516,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2525,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2484,
											"end": 2526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2484,
											"end": 2526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2554,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2558,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2633,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2539,
											"end": 2633,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2596,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2575,
											"end": 2596,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2596,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 2597,
											"end": 2607,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2609,
											"end": 2620,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2575,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2575,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2633,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2539,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2659,
											"end": 2669,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2692,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2650,
											"end": 2692,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2692,
											"name": "PUSH",
											"source": 6,
											"value": "7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E"
										},
										{
											"begin": 2671,
											"end": 2678,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2691,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2692,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2692,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2650,
											"end": 2692,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2692,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2650,
											"end": 2692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2692,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2650,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2692,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2692,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2692,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2692,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2692,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2692,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3241,
											"end": 3263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3272,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3266,
											"end": 3279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3278,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3279,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3266,
											"end": 3279,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3279,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3266,
											"end": 3279,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3279,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3279,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3279,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3266,
											"end": 3279,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3279,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3279,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3279,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3266,
											"end": 3279,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3279,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3241,
											"end": 3279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3241,
											"end": 3279,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3290,
											"end": 3311,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3314,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3330,
											"end": 3335,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3314,
											"end": 3336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3336,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3314,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3290,
											"end": 3336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3290,
											"end": 3336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3370,
											"end": 3374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3354,
											"end": 3385,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 3354,
											"end": 3385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3385,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3354,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3385,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 277,
											"end": 303,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 277,
											"end": 303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 277,
											"end": 303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 277,
											"end": 303,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 277,
											"end": 303,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 277,
											"end": 303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 310,
											"end": 343,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 310,
											"end": 343,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 310,
											"end": 343,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 310,
											"end": 343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 310,
											"end": 343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1538,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1523,
											"end": 1568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1523,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1581,
											"end": 1603,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1612,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1623,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1581,
											"end": 1624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1581,
											"end": 1624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1655,
											"end": 1656,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1641,
											"end": 1645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1652,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1641,
											"end": 1652,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1652,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1656,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1783,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1637,
											"end": 1783,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1694,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1713,
											"end": 1723,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1697,
											"end": 1724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1697,
											"end": 1724,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1697,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1758,
											"end": 1771,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1743,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1754,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1739,
											"end": 1754,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1739,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1783,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1783,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1637,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1807,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1795,
											"end": 1807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1807,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1807,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1795,
											"end": 1807,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1807,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1807,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1807,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1821,
											"end": 1831,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 1845,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1855,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1795,
											"end": 1856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1795,
											"end": 1856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1873,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1880,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1880,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1891,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1891,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1891,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1869,
											"end": 1891,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1869,
											"end": 1891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1891,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1869,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1891,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1891,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1925,
											"end": 1937,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1906,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1922,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1902,
											"end": 1922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1937,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 1972,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1955,
											"end": 1982,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 1974,
											"end": 1981,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1955,
											"end": 1982,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1955,
											"end": 1982,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1955,
											"end": 1982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1982,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1955,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1955,
											"end": 1982,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1982,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1982,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1982,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1982,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2897,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2906,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2900,
											"end": 2913,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2912,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2913,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2900,
											"end": 2913,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2913,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2900,
											"end": 2913,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2913,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2913,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2913,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2913,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2913,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2913,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2913,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2913,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2913,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2913,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2913,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2913,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2982,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2962,
											"end": 2982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2982,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2947,
											"end": 2982,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2947,
											"end": 2982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2982,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2947,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2924,
											"end": 2982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2924,
											"end": 2982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3056,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3036,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3005,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3012,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3001,
											"end": 3012,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3012,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3001,
											"end": 3033,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3001,
											"end": 3033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3033,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3001,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3001,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3001,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3001,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3000,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3000,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3056,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 3064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1532,
											"end": 1536,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1572,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1583,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 1732,
											"end": 1734,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1721,
											"end": 1730,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1717,
											"end": 1735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1664,
											"end": 1736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1814,
											"end": 1816,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1812,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1746,
											"end": 1818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1831,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1904,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1904,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1904,
											"end": 1928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1904,
											"end": 1928,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1904,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1897,
											"end": 1902,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1929,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1884,
											"end": 1947,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 1944,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1933,
											"end": 1945,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 1947,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1884,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2049,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2030,
											"end": 2050,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2021,
											"end": 2050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2021,
											"end": 2050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2059,
											"end": 2092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2104,
											"end": 2433,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2104,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2163,
											"end": 2169,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2200,
											"end": 2209,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2198,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2187,
											"end": 2210,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2215,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2218,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2218,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2297,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2218,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2339,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2408,
											"end": 2415,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2363,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2104,
											"end": 2433,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2104,
											"end": 2433,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2104,
											"end": 2433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2104,
											"end": 2433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2104,
											"end": 2433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2439,
											"end": 2661,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2439,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2536,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2559,
											"end": 2568,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2573,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2573,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2573,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2651,
											"end": 2652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2649,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2636,
											"end": 2653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2633,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2583,
											"end": 2654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2654,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2583,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2439,
											"end": 2661,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2439,
											"end": 2661,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2439,
											"end": 2661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2439,
											"end": 2661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2439,
											"end": 2661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2727,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2667,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2698,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2721,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2727,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2875,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2733,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2834,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2843,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2843,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2843,
											"end": 2867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2843,
											"end": 2867,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2843,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2834,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2868,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2834,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2816,
											"end": 2869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2869,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2816,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2875,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2881,
											"end": 3007,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2881,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2931,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2995,
											"end": 3000,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2964,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 3001,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2964,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2951,
											"end": 3001,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2951,
											"end": 3001,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2881,
											"end": 3007,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2881,
											"end": 3007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2881,
											"end": 3007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2881,
											"end": 3007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3153,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3013,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3110,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3141,
											"end": 3146,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3110,
											"end": 3147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3147,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3110,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3318,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3159,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3260,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3305,
											"end": 3310,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3260,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3260,
											"end": 3311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3260,
											"end": 3311,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3260,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3248,
											"end": 3312,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3574,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3324,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3431,
											"end": 3435,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3471,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3467,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3454,
											"end": 3472,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3564,
											"end": 3565,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3562,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3566,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3546,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3482,
											"end": 3567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3567,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3482,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3574,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3574,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3698,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3580,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3685,
											"end": 3690,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3667,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3691,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3667,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3662,
											"end": 3665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3655,
											"end": 3692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3797,
											"end": 3801,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3837,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3838,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3838,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3916,
											"end": 3917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3905,
											"end": 3914,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 3898,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3848,
											"end": 3919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3919,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3848,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 3926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4056,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4038,
											"end": 4057,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4094,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4085,
											"end": 4088,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3932,
											"end": 4101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4274,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4107,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4247,
											"end": 4266,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656E6F756768207374616B6564000000000000000000000000000000"
										},
										{
											"begin": 4243,
											"end": 4244,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4235,
											"end": 4241,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4231,
											"end": 4245,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4224,
											"end": 4267,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4646,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4280,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4422,
											"end": 4425,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4507,
											"end": 4509,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4502,
											"end": 4505,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 4443,
											"end": 4510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4510,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4443,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4436,
											"end": 4510,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4436,
											"end": 4510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4519,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4608,
											"end": 4611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4519,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4519,
											"end": 4612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4519,
											"end": 4612,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4519,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4637,
											"end": 4639,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4632,
											"end": 4635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 4640,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 4640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4646,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4646,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 5071,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 4652,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4856,
											"end": 4858,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4845,
											"end": 4854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4859,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 4914,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4899,
											"end": 4903,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4895,
											"end": 4915,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4891,
											"end": 4892,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 4889,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4876,
											"end": 4893,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4869,
											"end": 4916,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 5059,
											"end": 5063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4933,
											"end": 5064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 5064,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 4933,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 5064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 5064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 5071,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 5071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 5071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 5071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5077,
											"end": 5257,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5077,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5125,
											"end": 5202,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5115,
											"end": 5203,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5226,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5219,
											"end": 5220,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5212,
											"end": 5227,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5246,
											"end": 5250,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5243,
											"end": 5244,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5236,
											"end": 5251,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5454,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5263,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 5340,
											"end": 5341,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5322,
											"end": 5342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5342,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 5322,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 5374,
											"end": 5375,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5356,
											"end": 5376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 5356,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5376,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5399,
											"end": 5400,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5392,
											"end": 5401,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5385,
											"end": 5401,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5385,
											"end": 5401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5423,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5414,
											"end": 5424,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5411,
											"end": 5447,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5411,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 5411,
											"end": 5447,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5427,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 5427,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5427,
											"end": 5445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5427,
											"end": 5445,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 5427,
											"end": 5445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5411,
											"end": 5447,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 5411,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5454,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5654,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5460,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 5538,
											"end": 5539,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5520,
											"end": 5540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 5520,
											"end": 5540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5554,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 5572,
											"end": 5573,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5554,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5554,
											"end": 5574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5554,
											"end": 5574,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 5554,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5549,
											"end": 5574,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5549,
											"end": 5574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5598,
											"end": 5599,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5595,
											"end": 5596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5600,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5583,
											"end": 5600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5583,
											"end": 5600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5622,
											"end": 5623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5616,
											"end": 5620,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5613,
											"end": 5624,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5647,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5610,
											"end": 5647,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5627,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5627,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5645,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5627,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5647,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 5610,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5654,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5654,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5654,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5654,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5992,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 5660,
											"end": 5992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5819,
											"end": 5821,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5808,
											"end": 5817,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5804,
											"end": 5822,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 5900,
											"end": 5901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5885,
											"end": 5902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5876,
											"end": 5882,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 5832,
											"end": 5903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5903,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 5832,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5981,
											"end": 5983,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5970,
											"end": 5979,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5966,
											"end": 5984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 5913,
											"end": 5985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5985,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5913,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5992,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5992,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5992,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5992,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5998,
											"end": 6088,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5998,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6032,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6075,
											"end": 6080,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6061,
											"end": 6082,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6082,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5998,
											"end": 6088,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5998,
											"end": 6088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5998,
											"end": 6088,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5998,
											"end": 6088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6210,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 6094,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 6179,
											"end": 6184,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 6164,
											"end": 6185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6185,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 6164,
											"end": 6185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6157,
											"end": 6162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6186,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6144,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 6144,
											"end": 6204,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6200,
											"end": 6201,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6198,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6144,
											"end": 6204,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 6144,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6210,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6216,
											"end": 6353,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 6216,
											"end": 6353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6275,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6307,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6295,
											"end": 6308,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6286,
											"end": 6308,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6286,
											"end": 6308,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6317,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6341,
											"end": 6346,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6317,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 6317,
											"end": 6347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6317,
											"end": 6347,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6317,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6216,
											"end": 6353,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6216,
											"end": 6353,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6216,
											"end": 6353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6216,
											"end": 6353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6216,
											"end": 6353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6704,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 6359,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6426,
											"end": 6432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6477,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6463,
											"end": 6472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6454,
											"end": 6461,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6446,
											"end": 6478,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6443,
											"end": 6562,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6443,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 6443,
											"end": 6562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 6481,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 6481,
											"end": 6560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6560,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 6481,
											"end": 6560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6443,
											"end": 6562,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 6443,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6602,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6626,
											"end": 6687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 6679,
											"end": 6686,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6670,
											"end": 6676,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6659,
											"end": 6668,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6626,
											"end": 6687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 6626,
											"end": 6687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6626,
											"end": 6687,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 6626,
											"end": 6687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6616,
											"end": 6687,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6616,
											"end": 6687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6704,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6704,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6704,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6704,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6710,
											"end": 7042,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 6710,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6831,
											"end": 6835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6869,
											"end": 6871,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6858,
											"end": 6867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6854,
											"end": 6872,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6846,
											"end": 6872,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6846,
											"end": 6872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 6950,
											"end": 6951,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6939,
											"end": 6948,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6935,
											"end": 6952,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6926,
											"end": 6932,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6882,
											"end": 6953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 6953,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 6882,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6963,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7020,
											"end": 7029,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7007,
											"end": 7013,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6963,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6963,
											"end": 7035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6963,
											"end": 7035,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6963,
											"end": 7035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6710,
											"end": 7042,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6710,
											"end": 7042,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6710,
											"end": 7042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6710,
											"end": 7042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6710,
											"end": 7042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6710,
											"end": 7042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7048,
											"end": 7219,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 7048,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7211,
											"name": "PUSH",
											"source": 7,
											"value": "43616E6E6F74207374616B65203020746F6B656E730000000000000000000000"
										},
										{
											"begin": 7184,
											"end": 7185,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7176,
											"end": 7182,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7172,
											"end": 7186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7212,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7048,
											"end": 7219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7048,
											"end": 7219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7225,
											"end": 7591,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 7225,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7367,
											"end": 7370,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7388,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 7452,
											"end": 7454,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 7447,
											"end": 7450,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7388,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 7388,
											"end": 7455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7388,
											"end": 7455,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 7388,
											"end": 7455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7381,
											"end": 7455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7381,
											"end": 7455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 7553,
											"end": 7556,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 7464,
											"end": 7557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7557,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 7464,
											"end": 7557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7582,
											"end": 7584,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7577,
											"end": 7580,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7573,
											"end": 7585,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7585,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7225,
											"end": 7591,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7225,
											"end": 7591,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7225,
											"end": 7591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7225,
											"end": 7591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7597,
											"end": 8016,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 7597,
											"end": 8016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7763,
											"end": 7767,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7801,
											"end": 7803,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7790,
											"end": 7799,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7786,
											"end": 7804,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7778,
											"end": 7804,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7778,
											"end": 7804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7850,
											"end": 7859,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7848,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7840,
											"end": 7860,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7836,
											"end": 7837,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7825,
											"end": 7834,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7861,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7878,
											"end": 8009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 8004,
											"end": 8008,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7878,
											"end": 8009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 7878,
											"end": 8009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7878,
											"end": 8009,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 7878,
											"end": 8009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 8009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 8009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7597,
											"end": 8016,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7597,
											"end": 8016,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7597,
											"end": 8016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7597,
											"end": 8016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8464,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 8022,
											"end": 8464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8171,
											"end": 8175,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8209,
											"end": 8211,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8198,
											"end": 8207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8194,
											"end": 8212,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8186,
											"end": 8212,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8186,
											"end": 8212,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8222,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 8290,
											"end": 8291,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8279,
											"end": 8288,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8292,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8266,
											"end": 8272,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8222,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 8222,
											"end": 8293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8222,
											"end": 8293,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 8222,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8303,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 8371,
											"end": 8373,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8360,
											"end": 8369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8374,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8347,
											"end": 8353,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8303,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 8303,
											"end": 8375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8303,
											"end": 8375,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 8303,
											"end": 8375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8385,
											"end": 8457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 8453,
											"end": 8455,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8442,
											"end": 8451,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8438,
											"end": 8456,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8429,
											"end": 8435,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8385,
											"end": 8457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 8385,
											"end": 8457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8385,
											"end": 8457,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 8385,
											"end": 8457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8464,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8464,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8470,
											"end": 8880,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 8470,
											"end": 8880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8510,
											"end": 8517,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 8551,
											"end": 8552,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 8533,
											"end": 8553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8528,
											"end": 8553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8528,
											"end": 8553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8567,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 8585,
											"end": 8586,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8567,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 8567,
											"end": 8587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8567,
											"end": 8587,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 8567,
											"end": 8587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8562,
											"end": 8587,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8562,
											"end": 8587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8622,
											"end": 8623,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8619,
											"end": 8620,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8615,
											"end": 8624,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8644,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 8662,
											"end": 8673,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8644,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 8644,
											"end": 8674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8644,
											"end": 8674,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 8644,
											"end": 8674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 8674,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 8674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8824,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8814,
											"end": 8821,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8810,
											"end": 8825,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8807,
											"end": 8808,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8804,
											"end": 8826,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8784,
											"end": 8785,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8777,
											"end": 8786,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8757,
											"end": 8840,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8734,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 8734,
											"end": 8873,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8853,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 8853,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 8853,
											"end": 8871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8853,
											"end": 8871,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 8853,
											"end": 8871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8734,
											"end": 8873,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 8734,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8518,
											"end": 8880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8470,
											"end": 8880,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8470,
											"end": 8880,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8470,
											"end": 8880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8470,
											"end": 8880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8470,
											"end": 8880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8886,
											"end": 9066,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 8886,
											"end": 9066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8934,
											"end": 9011,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8931,
											"end": 8932,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8924,
											"end": 9012,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9031,
											"end": 9035,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 9028,
											"end": 9029,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9021,
											"end": 9036,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9055,
											"end": 9059,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9052,
											"end": 9053,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9045,
											"end": 9060,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9072,
											"end": 9257,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 9072,
											"end": 9257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9112,
											"end": 9113,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9129,
											"end": 9149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 9147,
											"end": 9148,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 9129,
											"end": 9149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9149,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 9129,
											"end": 9149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9124,
											"end": 9149,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9124,
											"end": 9149,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 9181,
											"end": 9182,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 9163,
											"end": 9183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9158,
											"end": 9183,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9158,
											"end": 9183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9202,
											"end": 9203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9192,
											"end": 9227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 9192,
											"end": 9227,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9207,
											"end": 9225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 9207,
											"end": 9225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 9207,
											"end": 9225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9207,
											"end": 9225,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 9207,
											"end": 9225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9192,
											"end": 9227,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 9192,
											"end": 9227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9249,
											"end": 9250,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9246,
											"end": 9247,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9242,
											"end": 9251,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9237,
											"end": 9251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9237,
											"end": 9251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9072,
											"end": 9257,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9072,
											"end": 9257,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9072,
											"end": 9257,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9072,
											"end": 9257,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9072,
											"end": 9257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"SimpleStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"calculateReward(address)": "d82e3962",
							"owner()": "8da5cb5b",
							"pendingRewards(address)": "31d7a262",
							"renounceOwnership()": "715018a6",
							"rewardRatePerBlock()": "90870492",
							"stake(uint256)": "a694fc3a",
							"stakes(address)": "16934fc4",
							"stakingToken()": "72f702f3",
							"transferOwnership(address)": "f2fde38b",
							"unstake(uint256)": "2e17de78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRatePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRatePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStakedBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract that allows users to stake ERC20 tokens and earn block-based rewards.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"calculateReward(address)\":{\"details\":\"Calculate pending rewards for a user (internal helper)\"},\"constructor\":{\"params\":{\"_rewardRatePerBlock\":\"Rewards distributed per block per token staked\",\"_stakingToken\":\"Address of the ERC20 staking token\",\"initialOwner\":\"Owner of the staking contract\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingRewards(address)\":{\"details\":\"View function to check total pending rewards for a user\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"stake(uint256)\":{\"details\":\"Stake specified amount of tokens\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unstake(uint256)\":{\"details\":\"Unstake specified amount and claim rewards\"}},\"title\":\"SimpleStaking\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SimpleStaking.sol\":\"SimpleStaking\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"SimpleStaking.sol\":{\"keccak256\":\"0x01718cb6752cb91133be5f3e3c442739acf48adb6dcef9d83d76dc79e713b4b6\",\"urls\":[\"bzz-raw://6c702bf72b659b0949774fa42b7b78e12625feaf69c389ecdc0c8ed48cff557f\",\"dweb:/ipfs/QmdUMyz3AE1xwxSCKXnhkH9pwE4stFVU3SmgeHuenRF1Xv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "SimpleStaking.sol:SimpleStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 942,
								"contract": "SimpleStaking.sol:SimpleStaking",
								"label": "stakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)877"
							},
							{
								"astId": 944,
								"contract": "SimpleStaking.sol:SimpleStaking",
								"label": "rewardRatePerBlock",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 956,
								"contract": "SimpleStaking.sol:SimpleStaking",
								"label": "stakes",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(StakeInfo)951_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)877": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(StakeInfo)951_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct SimpleStaking.StakeInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(StakeInfo)951_storage"
							},
							"t_struct(StakeInfo)951_storage": {
								"encoding": "inplace",
								"label": "struct SimpleStaking.StakeInfo",
								"members": [
									{
										"astId": 946,
										"contract": "SimpleStaking.sol:SimpleStaking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 948,
										"contract": "SimpleStaking.sol:SimpleStaking",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 950,
										"contract": "SimpleStaking.sol:SimpleStaking",
										"label": "lastStakedBlock",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> SimpleStaking.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "SimpleStaking.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"\n--> SimpleStaking.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "SimpleStaking.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"SimpleStaking.sol": {
				"ast": {
					"absolutePath": "SimpleStaking.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"SimpleStaking": [
							1229
						]
					},
					"id": 1230,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 935,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 800,
							"src": "0:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 148,
							"src": "57:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "Ownable",
										"nameLocations": [
											"262:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "262:7:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:6"
								}
							],
							"canonicalName": "SimpleStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 937,
								"nodeType": "StructuredDocumentation",
								"src": "113:121:6",
								"text": " @title SimpleStaking\n @dev Contract that allows users to stake ERC20 tokens and earn block-based rewards."
							},
							"fullyImplemented": true,
							"id": 1229,
							"linearizedBaseContracts": [
								1229,
								147,
								933
							],
							"name": "SimpleStaking",
							"nameLocation": "245:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 942,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "291:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1229,
									"src": "277:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$877",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 941,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 940,
											"name": "IERC20",
											"nameLocations": [
												"277:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 877,
											"src": "277:6:6"
										},
										"referencedDeclaration": 877,
										"src": "277:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$877",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "90870492",
									"id": 944,
									"mutability": "mutable",
									"name": "rewardRatePerBlock",
									"nameLocation": "325:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1229,
									"src": "310:33:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 943,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "310:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "SimpleStaking.StakeInfo",
									"id": 951,
									"members": [
										{
											"constant": false,
											"id": 946,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "430:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 951,
											"src": "422:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 945,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "422:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 948,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "492:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 951,
											"src": "484:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 947,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "484:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 950,
											"mutability": "mutable",
											"name": "lastStakedBlock",
											"nameLocation": "562:15:6",
											"nodeType": "VariableDeclaration",
											"scope": 951,
											"src": "554:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 949,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "554:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeInfo",
									"nameLocation": "401:9:6",
									"nodeType": "StructDefinition",
									"scope": 1229,
									"src": "394:237:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 956,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "676:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1229,
									"src": "639:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$951_storage_$",
										"typeString": "mapping(address => struct SimpleStaking.StakeInfo)"
									},
									"typeName": {
										"id": 955,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 952,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "647:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "639:29:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$951_storage_$",
											"typeString": "mapping(address => struct SimpleStaking.StakeInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 954,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 953,
												"name": "StakeInfo",
												"nameLocations": [
													"658:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 951,
												"src": "658:9:6"
											},
											"referencedDeclaration": 951,
											"src": "658:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
												"typeString": "struct SimpleStaking.StakeInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 962,
									"name": "Staked",
									"nameLocation": "697:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "704:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "734:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "726:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:38:6"
									},
									"src": "691:51:6"
								},
								{
									"anonymous": false,
									"eventSelector": "7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e",
									"id": 970,
									"name": "Unstaked",
									"nameLocation": "754:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "779:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "763:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "793:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "785:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "785:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "809:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "801:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "801:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "762:54:6"
									},
									"src": "748:69:6"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "1155:246:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 984,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "1174:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1199:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1191:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 985,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1191:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1191:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1174:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1203:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1166:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1166:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "1166:61:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 994,
																"name": "_rewardRatePerBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "1246:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1268:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1246:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207265776172642072617465",
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1271:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_19c12d387005db191068f08c80e9280fdba4fa8902b3de3d392c34dbe7931e16",
																"typeString": "literal_string \"Invalid reward rate\""
															},
															"value": "Invalid reward rate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_19c12d387005db191068f08c80e9280fdba4fa8902b3de3d392c34dbe7931e16",
																"typeString": "literal_string \"Invalid reward rate\""
															}
														],
														"id": 993,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1238:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1238:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "1238:55:6"
											},
											{
												"expression": {
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1000,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "1306:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1002,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "1328:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1001,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "1321:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1321:21:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"src": "1306:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "1306:36:6"
											},
											{
												"expression": {
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1006,
														"name": "rewardRatePerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "1353:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1007,
														"name": "_rewardRatePerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "1374:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1353:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "1353:40:6"
											}
										]
									},
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "825:216:6",
										"text": " @param _stakingToken Address of the ERC20 staking token\n @param _rewardRatePerBlock Rewards distributed per block per token staked\n @param initialOwner Owner of the staking contract"
									},
									"id": 1011,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 980,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 977,
													"src": "1141:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 981,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 979,
												"name": "Ownable",
												"nameLocations": [
													"1133:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1133:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1133:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "1067:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1059:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1059:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "_rewardRatePerBlock",
												"nameLocation": "1090:19:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1082:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1119:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1111:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1058:74:6"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1155:0:6"
									},
									"scope": 1229,
									"src": "1047:354:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "1512:478:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1018,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "1531:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1541:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1531:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b65203020746f6b656e73",
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1544:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
																"typeString": "literal_string \"Cannot stake 0 tokens\""
															},
															"value": "Cannot stake 0 tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
																"typeString": "literal_string \"Cannot stake 0 tokens\""
															}
														],
														"id": 1017,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1523:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1523:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "1523:45:6"
											},
											{
												"assignments": [
													1026
												],
												"declarations": [
													{
														"constant": false,
														"id": 1026,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "1599:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "1581:22:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
															"typeString": "struct SimpleStaking.StakeInfo"
														},
														"typeName": {
															"id": 1025,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1024,
																"name": "StakeInfo",
																"nameLocations": [
																	"1581:9:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 951,
																"src": "1581:9:6"
															},
															"referencedDeclaration": 951,
															"src": "1581:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1031,
												"initialValue": {
													"baseExpression": {
														"id": 1027,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "1606:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$951_storage_$",
															"typeString": "mapping(address => struct SimpleStaking.StakeInfo storage ref)"
														}
													},
													"id": 1030,
													"indexExpression": {
														"expression": {
															"id": 1028,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1613:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1617:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1613:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1606:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$951_storage",
														"typeString": "struct SimpleStaking.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1581:43:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1032,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "1641:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo storage pointer"
															}
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1646:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "1641:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1655:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1641:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1050,
												"nodeType": "IfStatement",
												"src": "1637:146:6",
												"trueBody": {
													"id": 1049,
													"nodeType": "Block",
													"src": "1658:125:6",
													"statements": [
														{
															"assignments": [
																1037
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1037,
																	"mutability": "mutable",
																	"name": "pendingReward",
																	"nameLocation": "1681:13:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1049,
																	"src": "1673:21:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1036,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1673:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1042,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1039,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1713:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1717:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1713:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1038,
																	"name": "calculateReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "1697:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1697:27:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1673:51:6"
														},
														{
															"expression": {
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1043,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1026,
																		"src": "1739:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
																			"typeString": "struct SimpleStaking.StakeInfo storage pointer"
																		}
																	},
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1744:10:6",
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 948,
																	"src": "1739:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1046,
																	"name": "pendingReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "1758:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1739:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1048,
															"nodeType": "ExpressionStatement",
															"src": "1739:32:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1054,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1821:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1825:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1821:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1058,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1841:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleStaking_$1229",
																		"typeString": "contract SimpleStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleStaking_$1229",
																		"typeString": "contract SimpleStaking"
																	}
																],
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1833:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1056,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1833:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1833:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "1848:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1051,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "1795:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1808:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 876,
														"src": "1795:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1795:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "1795:61:6"
											},
											{
												"expression": {
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1063,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "1869:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo storage pointer"
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1874:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "1869:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1066,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "1884:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1869:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "1869:22:6"
											},
											{
												"expression": {
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1069,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "1902:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo storage pointer"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1907:15:6",
														"memberName": "lastStakedBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 950,
														"src": "1902:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1072,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1925:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1931:6:6",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "1925:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1902:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "1902:35:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1077,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1962:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1966:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1962:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "1974:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1076,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "1955:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1955:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "EmitStatement",
												"src": "1950:32:6"
											}
										]
									},
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "1407:58:6",
										"text": " @dev Stake specified amount of tokens"
									},
									"functionSelector": "a694fc3a",
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1480:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1494:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1486:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:17:6"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1512:0:6"
									},
									"scope": 1229,
									"src": "1471:519:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1166,
										"nodeType": "Block",
										"src": "2115:585:6",
										"statements": [
											{
												"assignments": [
													1091
												],
												"declarations": [
													{
														"constant": false,
														"id": 1091,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "2144:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1166,
														"src": "2126:22:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
															"typeString": "struct SimpleStaking.StakeInfo"
														},
														"typeName": {
															"id": 1090,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1089,
																"name": "StakeInfo",
																"nameLocations": [
																	"2126:9:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 951,
																"src": "2126:9:6"
															},
															"referencedDeclaration": 951,
															"src": "2126:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"baseExpression": {
														"id": 1092,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "2151:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$951_storage_$",
															"typeString": "mapping(address => struct SimpleStaking.StakeInfo storage ref)"
														}
													},
													"id": 1095,
													"indexExpression": {
														"expression": {
															"id": 1093,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2158:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2162:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2158:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2151:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$951_storage",
														"typeString": "struct SimpleStaking.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2126:43:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1098,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "2188:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
																		"typeString": "struct SimpleStaking.StakeInfo storage pointer"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2193:6:6",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 946,
																"src": "2188:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1100,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "2203:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2188:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768207374616b6564",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2212:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76",
																"typeString": "literal_string \"Not enough staked\""
															},
															"value": "Not enough staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76",
																"typeString": "literal_string \"Not enough staked\""
															}
														],
														"id": 1097,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2180:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2180:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "2180:52:6"
											},
											{
												"assignments": [
													1106
												],
												"declarations": [
													{
														"constant": false,
														"id": 1106,
														"mutability": "mutable",
														"name": "pendingReward",
														"nameLocation": "2253:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1166,
														"src": "2245:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2245:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1111,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1108,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2285:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2289:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2285:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1107,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "2269:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2269:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2245:51:6"
											},
											{
												"assignments": [
													1113
												],
												"declarations": [
													{
														"constant": false,
														"id": 1113,
														"mutability": "mutable",
														"name": "totalReward",
														"nameLocation": "2315:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1166,
														"src": "2307:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1112,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2307:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1118,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1114,
														"name": "pendingReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "2329:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"id": 1115,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "2345:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo storage pointer"
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2350:10:6",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 948,
														"src": "2345:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2329:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2307:53:6"
											},
											{
												"expression": {
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1119,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "2373:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo storage pointer"
															}
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2378:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "2373:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1122,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "2388:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2373:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "2373:22:6"
											},
											{
												"expression": {
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1125,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "2406:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo storage pointer"
															}
														},
														"id": 1127,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2411:10:6",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 948,
														"src": "2406:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2424:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2406:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "2406:19:6"
											},
											{
												"expression": {
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1131,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "2436:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo storage pointer"
															}
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2441:15:6",
														"memberName": "lastStakedBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 950,
														"src": "2436:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1134,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2459:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2465:6:6",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "2459:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2436:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "2436:35:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1141,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2506:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2510:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2506:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "2518:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1138,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "2484:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2497:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 844,
														"src": "2484:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2484:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "2484:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1146,
														"name": "totalReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "2543:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2557:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2543:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1158,
												"nodeType": "IfStatement",
												"src": "2539:94:6",
												"trueBody": {
													"id": 1157,
													"nodeType": "Block",
													"src": "2560:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1152,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2597:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2601:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2597:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1154,
																		"name": "totalReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "2609:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1149,
																		"name": "stakingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "2575:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2588:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 844,
																	"src": "2575:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2575:46:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1156,
															"nodeType": "ExpressionStatement",
															"src": "2575:46:6"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1160,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2659:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2663:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2659:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1162,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "2671:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1163,
															"name": "totalReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "2680:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1159,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "2650:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "EmitStatement",
												"src": "2645:47:6"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "1998:68:6",
										"text": " @dev Unstake specified amount and claim rewards"
									},
									"functionSelector": "2e17de78",
									"id": 1167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "2081:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2097:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "2089:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2089:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2088:17:6"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2115:0:6"
									},
									"scope": 1229,
									"src": "2072:628:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "2864:200:6",
										"statements": [
											{
												"assignments": [
													1177
												],
												"declarations": [
													{
														"constant": false,
														"id": 1177,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "2893:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1200,
														"src": "2875:22:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
															"typeString": "struct SimpleStaking.StakeInfo"
														},
														"typeName": {
															"id": 1176,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1175,
																"name": "StakeInfo",
																"nameLocations": [
																	"2875:9:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 951,
																"src": "2875:9:6"
															},
															"referencedDeclaration": 951,
															"src": "2875:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1181,
												"initialValue": {
													"baseExpression": {
														"id": 1178,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "2900:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$951_storage_$",
															"typeString": "mapping(address => struct SimpleStaking.StakeInfo storage ref)"
														}
													},
													"id": 1180,
													"indexExpression": {
														"id": 1179,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "2907:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2900:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$951_storage",
														"typeString": "struct SimpleStaking.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2875:38:6"
											},
											{
												"assignments": [
													1183
												],
												"declarations": [
													{
														"constant": false,
														"id": 1183,
														"mutability": "mutable",
														"name": "blocksPassed",
														"nameLocation": "2932:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1200,
														"src": "2924:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1182,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2924:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1189,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1184,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2947:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2953:6:6",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "2947:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1186,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "2962:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo storage pointer"
															}
														},
														"id": 1187,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:15:6",
														"memberName": "lastStakedBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 950,
														"src": "2962:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2947:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2924:58:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1190,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1177,
																			"src": "3001:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
																				"typeString": "struct SimpleStaking.StakeInfo storage pointer"
																			}
																		},
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3006:6:6",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 946,
																		"src": "3001:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1192,
																		"name": "rewardRatePerBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "3015:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3001:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1194,
																	"name": "blocksPassed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "3036:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3001:47:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1196,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3000:49:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3052:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "3000:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1174,
												"id": 1199,
												"nodeType": "Return",
												"src": "2993:63:6"
											}
										]
									},
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "2708:80:6",
										"text": " @dev Calculate pending rewards for a user (internal helper)"
									},
									"functionSelector": "d82e3962",
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "2803:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "2827:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "2819:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2819:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2818:15:6"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "2855:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:6"
									},
									"scope": 1229,
									"src": "2794:270:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "3230:163:6",
										"statements": [
											{
												"assignments": [
													1211
												],
												"declarations": [
													{
														"constant": false,
														"id": 1211,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "3259:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "3241:22:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
															"typeString": "struct SimpleStaking.StakeInfo"
														},
														"typeName": {
															"id": 1210,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1209,
																"name": "StakeInfo",
																"nameLocations": [
																	"3241:9:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 951,
																"src": "3241:9:6"
															},
															"referencedDeclaration": 951,
															"src": "3241:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1215,
												"initialValue": {
													"baseExpression": {
														"id": 1212,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "3266:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$951_storage_$",
															"typeString": "mapping(address => struct SimpleStaking.StakeInfo storage ref)"
														}
													},
													"id": 1214,
													"indexExpression": {
														"id": 1213,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "3273:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3266:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$951_storage",
														"typeString": "struct SimpleStaking.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3241:38:6"
											},
											{
												"assignments": [
													1217
												],
												"declarations": [
													{
														"constant": false,
														"id": 1217,
														"mutability": "mutable",
														"name": "pendingReward",
														"nameLocation": "3298:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "3290:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1216,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3290:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1221,
												"initialValue": {
													"arguments": [
														{
															"id": 1219,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "3330:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1218,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "3314:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3290:46:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1222,
														"name": "pendingReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "3354:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"id": 1223,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "3370:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$951_storage_ptr",
																"typeString": "struct SimpleStaking.StakeInfo storage pointer"
															}
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3375:10:6",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 948,
														"src": "3370:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3354:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1208,
												"id": 1226,
												"nodeType": "Return",
												"src": "3347:38:6"
											}
										]
									},
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "3072:81:6",
										"text": " @dev View function to check total pending rewards for a user"
									},
									"functionSelector": "31d7a262",
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingRewards",
									"nameLocation": "3168:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3191:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3183:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:15:6"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3221:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3221:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3220:9:6"
									},
									"scope": 1229,
									"src": "3159:234:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1230,
							"src": "236:3160:6",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								962,
								970
							]
						}
					],
					"src": "0:3398:6"
				},
				"id": 6
			}
		}
	}
}